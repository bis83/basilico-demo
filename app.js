(()=>{const h=(e,t,r)=>{e.addEventListener(t,r)},x=()=>document.getElementById("canvas"),T=()=>document.getElementById("message"),O=e=>{const t=T();t.style.display="",t.textContent=e},H=()=>{const e=T();e.style.display="none"};const K=(e,t)=>Math.floor(e/t),Y=(e,t)=>(e%t+t)%t,y=e=>e/180*Math.PI,J=(e,t)=>Math.sqrt(e*e+t*t),w=(e,t)=>{const r=J(e,t);return r!=0?[e/r,t/r]:[0,0]};const P=(e,t)=>e[0]*t[0]+e[1]*t[1]+e[2]*t[2],Q=e=>{const t=P(e,e);return Math.sqrt(t)},Z=(e,t)=>[e[0]+t[0],e[1]+t[1],e[2]+t[2]],ee=(e,t)=>[e[0]-t[0],e[1]-t[1],e[2]-t[2]];const L=e=>{const t=Q(e);return[e[0]/t,e[1]/t,e[2]/t]},V=(e,t)=>[e[1]*t[2]-e[2]*t[1],e[2]*t[0]-e[0]*t[2],e[0]*t[1]-e[1]*t[0]],A=(e,t)=>{const r=y(e),n=y(t);return[Math.cos(n)*Math.cos(r),Math.sin(n),Math.cos(n)*Math.sin(r)]},te=()=>[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],ne=(e,t)=>[e[0]*t[0]+e[1]*t[4]+e[2]*t[8]+e[3]*t[12],e[0]*t[1]+e[1]*t[5]+e[2]*t[9]+e[3]*t[13],e[0]*t[2]+e[1]*t[6]+e[2]*t[10]+e[3]*t[14],e[0]*t[3]+e[1]*t[7]+e[2]*t[11]+e[3]*t[15],e[4]*t[0]+e[5]*t[4]+e[6]*t[8]+e[7]*t[12],e[4]*t[1]+e[5]*t[5]+e[6]*t[9]+e[7]*t[13],e[4]*t[2]+e[5]*t[6]+e[6]*t[10]+e[7]*t[14],e[4]*t[3]+e[5]*t[7]+e[6]*t[11]+e[7]*t[15],e[8]*t[0]+e[9]*t[4]+e[10]*t[8]+e[11]*t[12],e[8]*t[1]+e[9]*t[5]+e[10]*t[9]+e[11]*t[13],e[8]*t[2]+e[9]*t[6]+e[10]*t[10]+e[11]*t[14],e[8]*t[3]+e[9]*t[7]+e[10]*t[11]+e[11]*t[15],e[12]*t[0]+e[13]*t[4]+e[14]*t[8]+e[15]*t[12],e[12]*t[1]+e[13]*t[5]+e[14]*t[9]+e[15]*t[13],e[12]*t[2]+e[13]*t[6]+e[14]*t[10]+e[15]*t[14],e[12]*t[3]+e[13]*t[7]+e[14]*t[11]+e[15]*t[15]],re=e=>{const t=e[0]*e[5]-e[1]*e[4],r=e[0]*e[6]-e[2]*e[4],n=e[0]*e[7]-e[3]*e[4],o=e[1]*e[6]-e[2]*e[5],s=e[1]*e[7]-e[3]*e[5],i=e[2]*e[7]-e[3]*e[6],c=e[8]*e[13]-e[9]*e[12],f=e[8]*e[14]-e[10]*e[12],l=e[8]*e[15]-e[11]*e[12],u=e[9]*e[14]-e[10]*e[13],a=e[9]*e[15]-e[11]*e[13],m=e[10]*e[15]-e[11]*e[14];let d=t*m-r*a+n*u+o*l-s*f+i*c;return d?(d=1/d,[(e[5]*m-e[6]*a+e[7]*u)*d,(e[2]*a-e[1]*m-e[3]*u)*d,(e[13]*i-e[14]*s+e[15]*o)*d,(e[10]*s-e[9]*i-e[11]*o)*d,(e[6]*l-e[4]*m-e[7]*f)*d,(e[0]*m-e[2]*l+e[3]*f)*d,(e[14]*n-e[12]*i-e[15]*r)*d,(e[8]*i-e[10]*n+e[11]*r)*d,(e[4]*a-e[5]*l+e[7]*c)*d,(e[1]*l-e[0]*a-e[3]*c)*d,(e[12]*s-e[13]*n+e[15]*t)*d,(e[9]*n-e[8]*s-e[11]*t)*d,(e[5]*f-e[4]*u-e[6]*c)*d,(e[0]*u-e[1]*f+e[2]*c)*d,(e[13]*r-e[12]*o-e[14]*t)*d,(e[8]*o-e[9]*r+e[10]*t)*d]):te()};const oe=(e,t,r,n)=>{e[12]=t,e[13]=r,e[14]=n},se=(e,t)=>{const r=y(e),n=Math.sin(r),o=Math.cos(r);return[o,0,n,0,0,1,0,0,-n,0,o,0,0,0,0,1]};const ie=(e,t,r)=>{const n=L(ee(t,e)),o=L(V(r,n)),s=V(n,o),i=P(e,o),c=P(e,s),f=P(e,n);return[o[0],s[0],n[0],0,o[1],s[1],n[1],0,o[2],s[2],n[2],0,-i,-c,-f,1]},ae=(e,t,r,n)=>{const o=1/Math.tan(e),s=o/t,i=n/(n-r),c=-(i*r);return[s,0,0,0,0,o,0,0,0,0,i,1,0,0,c,0]};const ce=e=>{const t=e.device;e.bindGroupLayout=[],e.pipelineLayout=[],e.pipeline=[],e.sampler=[],e.bindGroup=[],e.cbuffer=[],e.gbuffer=[];const r=(n,o,s)=>{e.cbuffer[n]=t.createBuffer({size:o,usage:s|GPUBufferUsage.COPY_DST})};r(0,512,GPUBufferUsage.UNIFORM),r(1,196608,GPUBufferUsage.STORAGE),r(2,65536,GPUBufferUsage.VERTEX),r(3,40960,GPUBufferUsage.INDIRECT),r(4,49152,GPUBufferUsage.VERTEX),r(5,16384,GPUBufferUsage.VERTEX),e.sampler[0]=t.createSampler({magFilter:"linear",minFilter:"linear",mipmapFilter:"linear"}),e.bindGroupLayout[0]=t.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.VERTEX,buffer:{}},{binding:1,visibility:GPUShaderStage.VERTEX|GPUShaderStage.FRAGMENT,buffer:{type:"read-only-storage"}}]}),e.bindGroupLayout[1]=t.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.FRAGMENT,buffer:{}},{binding:1,visibility:GPUShaderStage.FRAGMENT,texture:{sampleType:"depth"}},{binding:2,visibility:GPUShaderStage.FRAGMENT,texture:{}},{binding:3,visibility:GPUShaderStage.FRAGMENT,texture:{}},{binding:4,visibility:GPUShaderStage.FRAGMENT,texture:{}},{binding:5,visibility:GPUShaderStage.FRAGMENT,sampler:{}}]}),e.pipelineLayout[0]=t.createPipelineLayout({bindGroupLayouts:[e.bindGroupLayout[0]]}),e.pipelineLayout[1]=t.createPipelineLayout({bindGroupLayouts:[e.bindGroupLayout[1]]}),e.bindGroup[0]=t.createBindGroup({layout:e.bindGroupLayout[0],entries:[{binding:0,resource:{buffer:e.cbuffer[0]}},{binding:1,resource:{buffer:e.cbuffer[1]}}]})},fe=(e,t)=>{for(let r=0;r<e.id.length;++r)if(e.id[r].name===t)return r;return-1},de=(e,t)=>{const r=e.device,n=t.camera,o=new Float32Array(68),s=canvas.width/canvas.height,i=y(n.fov),c=A(n.ha,n.va),f=n.eye,l=Z(f,c),a=ie(f,l,[0,1,0]),m=ae(i,s,n.near,n.far),d=ne(a,m),p=re(d);o.set(d,0),o.set(p,16),o.set(a,32),o.set(f,48);const b=t.light,g=A(b.ha,b.va);o.set(g,52),o.set(b.color,56),o.set(b.ambient0,60),o.set(b.ambient1,64),r.queue.writeBuffer(e.cbuffer[0],0,o)},le=(e,t)=>{const r=e.device;if(t.lines.length<=0)return;const n=new Float32Array(t.lines.length*3),o=new Uint8Array(t.lines.length*4);for(let s=0;s<t.lines.length;++s){const i=t.lines[s];n[s*3+0]=i.pos[0],n[s*3+1]=i.pos[1],n[s*3+2]=i.pos[2],o[s*4+0]=i.color[0],o[s*4+1]=i.color[1],o[s*4+2]=i.color[2],o[s*4+3]=i.color[3]}r.queue.writeBuffer(e.cbuffer[4],0,n),r.queue.writeBuffer(e.cbuffer[5],0,o)},ue=(e,t)=>{const r=e.device,n=[];n.length=e.mesh.length;for(let a=0;a<n.length;++a)n[a]=[];const o=new Float32Array(24),s=4*24;let i=0;for(const a of t.room)for(let m=0;m<a.indices.length;++m){const d=a.node[a.indices[m]];if(!d)continue;const p=Y(m,a.divisor),b=K(m,a.divisor),[g,_,E,$,k]=M(a.offset,p*a.unit,0,b*a.unit,0,0);for(const D of d.mesh){const v=a.mesh[D];if(!v)continue;const U=fe(e,v.name);if(U<0)continue;for(const j of e.id[U].mesh)n[j].push(i);const[C,I,q,z,N]=M(v.offset,g,_,E,$,k),R=se(z,N);oe(R,C,I,q);const X=S(v.factor0,1,1,1,1),W=S(v.factor1,1,1,1,0);o.set(R,0),o.set(X,16),o.set(W,20),r.queue.writeBuffer(e.cbuffer[1],i*s,o),i+=1}}const c=[];let f=0,l=0;const u=new Uint32Array(5);for(let a=0;a<n.length;++a){if(n[a].length<=0)continue;const m=e.mesh[a],d=n[a].length;r.queue.writeBuffer(e.cbuffer[2],f*4,new Uint32Array(n[a])),u[0]=m.count,u[1]=d,u[2]=0,u[3]=0,u[4]=0,r.queue.writeBuffer(e.cbuffer[3],l,u),c.push({id:a,first:f,offset:l}),f+=d,l+=20}return c},me=e=>{const t=e.device,r=e.canvas;if(r.width!==r.clientWidth||r.height!==r.clientHeight){r.width=r.clientWidth,r.height=r.clientHeight;const s=c=>{e.gbuffer[c]!==void 0&&(e.gbuffer[c].destroy(),delete e.gbuffer[c])};s(0),s(1),s(2),s(3),s(4);const i=c=>{e.bindGroup[c]!==void 0&&delete e.bindGroup[c]};i(1),i(2),i(3)}const n=(s,i)=>{e.gbuffer[s]===void 0&&(e.gbuffer[s]=t.createTexture({size:[r.width,r.height],format:i,usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING}))};n(0,"depth32float"),n(1,"rgb10a2unorm"),n(2,"rgba8unorm"),n(3,"rgba8unorm"),n(4,"rgba16float");const o=(s,i,c,f,l)=>{e.bindGroup[s]===void 0&&(e.bindGroup[s]=t.createBindGroup({layout:e.bindGroupLayout[1],entries:[{binding:0,resource:{buffer:e.cbuffer[0]}},{binding:1,resource:e.gbuffer[i].createView()},{binding:2,resource:e.gbuffer[c].createView()},{binding:3,resource:e.gbuffer[f].createView()},{binding:4,resource:e.gbuffer[l].createView()},{binding:5,resource:e.sampler[0]}]}))};o(1,0,1,2,3),o(2,0,1,1,1),o(3,0,4,4,4)},he=e=>{const t=e.device;e.pipeline[0]=t.createRenderPipeline({layout:e.pipelineLayout[0],vertex:{module:e.shader[0],entryPoint:"VS",buffers:[{arrayStride:4,attributes:[{format:"uint32",offset:0,shaderLocation:0}],stepMode:"instance"},{arrayStride:12,attributes:[{format:"float32x3",offset:0,shaderLocation:1}]},{arrayStride:12,attributes:[{format:"float32x3",offset:0,shaderLocation:2}]}]},fragment:{module:e.shader[0],entryPoint:"FS",targets:[{format:"rgb10a2unorm"},{format:"rgba8unorm"},{format:"rgba8unorm"}]},depthStencil:{depthWriteEnabled:!0,depthCompare:"less",format:"depth32float"},primitive:{cullMode:"back",frontFace:"cw"}}),e.pipeline[1]=t.createRenderPipeline({layout:e.pipelineLayout[1],vertex:{module:e.shader[1],entryPoint:"VS",buffers:[]},fragment:{module:e.shader[1],entryPoint:"FS_SSAO",targets:[{format:"rgba8unorm",blend:{color:{operation:"min",srcFactor:"one",dstFactor:"one"},alpha:{}},writeMask:GPUColorWrite.RED}]}}),e.pipeline[2]=t.createRenderPipeline({layout:e.pipelineLayout[1],vertex:{module:e.shader[1],entryPoint:"VS",buffers:[]},fragment:{module:e.shader[1],entryPoint:"FS_HDR",targets:[{format:"rgba16float"}]},depthStencil:{depthWriteEnabled:!1,depthCompare:"not-equal",format:"depth32float"}}),e.pipeline[3]=t.createRenderPipeline({layout:e.pipelineLayout[1],vertex:{module:e.shader[1],entryPoint:"VS",buffers:[]},fragment:{module:e.shader[1],entryPoint:"FS_HDRSky",targets:[{format:"rgba16float"}]},depthStencil:{depthWriteEnabled:!1,depthCompare:"equal",format:"depth32float"}}),e.pipeline[4]=t.createRenderPipeline({layout:e.pipelineLayout[1],vertex:{module:e.shader[1],entryPoint:"VS",buffers:[]},fragment:{module:e.shader[1],entryPoint:"FS_HDR2LDR",targets:[{format:e.canvasFormat}]},depthStencil:{depthWriteEnabled:!1,depthCompare:"always",format:"depth32float"}}),e.pipeline[5]=t.createRenderPipeline({layout:e.pipelineLayout[0],vertex:{module:e.shader[2],entryPoint:"VS",buffers:[{arrayStride:12,attributes:[{format:"float32x3",offset:0,shaderLocation:0}]},{arrayStride:4,attributes:[{format:"unorm8x4",offset:0,shaderLocation:1}]}]},fragment:{module:e.shader[2],entryPoint:"FS",targets:[{format:e.canvasFormat}]},depthStencil:{depthWriteEnabled:!1,depthCompare:"less",format:"depth32float"},primitive:{topology:"line-list"}})},be=e=>{me(e)},pe=(e,t)=>{const r=e.device,n=e.context;de(e,t),le(e,t);const o=ue(e,t),s=r.createCommandEncoder();{const i=s.beginRenderPass({depthStencilAttachment:{view:e.gbuffer[0].createView(),depthClearValue:1,depthLoadOp:"clear",depthStoreOp:"store"},colorAttachments:[{view:e.gbuffer[1].createView(),clearValue:{r:0,g:0,b:0,a:0},loadOp:"clear",storeOp:"store"},{view:e.gbuffer[2].createView(),clearValue:{r:0,g:0,b:0,a:0},loadOp:"clear",storeOp:"store"},{view:e.gbuffer[3].createView(),clearValue:{r:1,g:0,b:0,a:0},loadOp:"clear",storeOp:"store"}]});for(const c of o){i.setPipeline(e.pipeline[0]),i.setBindGroup(0,e.bindGroup[0]),i.setVertexBuffer(0,e.cbuffer[2],c.first*4);const f=e.mesh[c.id];if(f.vb0){const[l,u,a]=f.vb0;i.setVertexBuffer(1,e.buffer[l],u,a)}if(f.vb1){const[l,u,a]=f.vb1;i.setVertexBuffer(2,e.buffer[l],u,a)}if(f.ib){const[l,u,a]=f.ib;i.setIndexBuffer(e.buffer[l],"uint16",u,a)}i.drawIndexedIndirect(e.cbuffer[3],c.offset)}i.end()}{const i=s.beginRenderPass({colorAttachments:[{view:e.gbuffer[3].createView(),loadOp:"load",storeOp:"store"}]});i.setPipeline(e.pipeline[1]),i.setBindGroup(0,e.bindGroup[2]),i.draw(4),i.end()}{const i=s.beginRenderPass({depthStencilAttachment:{view:e.gbuffer[0].createView(),depthReadOnly:!0},colorAttachments:[{view:e.gbuffer[4].createView(),clearValue:{r:0,g:0,b:0,a:0},loadOp:"clear",storeOp:"store"}]});i.setPipeline(e.pipeline[2]),i.setBindGroup(0,e.bindGroup[1]),i.draw(4),i.setPipeline(e.pipeline[3]),i.draw(4),i.end()}{const i=s.beginRenderPass({depthStencilAttachment:{view:e.gbuffer[0].createView(),depthReadOnly:!0},colorAttachments:[{view:n.getCurrentTexture().createView(),clearValue:{r:0,g:0,b:0,a:0},loadOp:"clear",storeOp:"store"}]});i.setPipeline(e.pipeline[4]),i.setBindGroup(0,e.bindGroup[3]),i.draw(4),t.lines.length>0&&(i.setPipeline(e.pipeline[5]),i.setBindGroup(0,e.bindGroup[0]),i.setVertexBuffer(0,e.cbuffer[4]),i.setVertexBuffer(1,e.cbuffer[5]),i.draw(t.lines.length)),i.end()}r.queue.submit([s.finish()])},ye=e=>{e.timer={t:performance.now(),dt:0,n:0},e.gpad={id:null,lx:0,ly:0,rx:0,ry:0,b0:!1,b1:!1,b8:!1,b9:!1,lb:!1,rb:!1,lt:!1,rt:!1},e.mkey={mx:0,my:0,b0:!1,b1:!1,b2:!1,b3:!1,b4:!1,w:!1,a:!1,s:!1,d:!1,up:!1,left:!1,down:!1,right:!1,q:!1,e:!1,z:!1,x:!1,space:!1,lctrl:!1,esc:!1};const t={KeyW:"w",KeyA:"a",KeyS:"s",KeyD:"d",ArrowUp:"up",ArrowLeft:"left",ArrowDown:"down",ArrowRight:"right",KeyQ:"q",KeyE:"e",KeyZ:"z",KeyX:"x",Space:"space",ControlLeft:"lctrl",Escape:"esc"},r={0:"b0",1:"b1",2:"b2",3:"b3",4:"b4"};h(window,"focus",n=>{}),h(window,"blur",n=>{const o=e.mkey;for(const s in t)o[t[s]]=!1;for(const s in r)o[r[s]]=!1;o.mx=0,o.my=0}),h(window,"resize",n=>{}),h(window,"gamepadconnected",n=>{e.gpad.id=n.gamepad.index}),h(window,"gamepaddisconnected",n=>{e.gpad.id===n.gamepad.index&&(e.gpad.id=null)}),h(document,"keydown",n=>{const o=t[n.code];o&&(e.mkey[o]=!0,n.preventDefault())}),h(document,"keyup",n=>{const o=t[n.code];o&&(e.mkey[o]=!1,n.preventDefault())}),h(document,"click",n=>{document.pointerLockElement||x().requestPointerLock()}),h(document,"mousedown",n=>{if(document.pointerLockElement===x()){const o=r[n.button];o&&(e.mkey[o]=!0,n.preventDefault())}}),h(document,"mouseup",n=>{if(document.pointerLockElement===x()){const o=r[n.button];o&&(e.mkey[o]=!1,n.preventDefault())}}),h(document,"mousemove",n=>{document.pointerLockElement===x()&&(e.mkey.mx=n.movementX,e.mkey.my=n.movementY,n.preventDefault())}),h(document.body,"contextmenu",n=>{n.preventDefault()})},ge=(e,t)=>{if(e.timer.dt=(t-e.timer.t)/1e3,e.timer.t=t,e.timer.n+=1,e.gpad.id!==null){const r=navigator.getGamepads()[e.gpad.id];e.gpad.lx=Math.trunc(r.axes[0]*4)/4,e.gpad.ly=Math.trunc(r.axes[1]*4)/4,e.gpad.rx=Math.trunc(r.axes[2]*4)/4,e.gpad.ry=Math.trunc(r.axes[3]*4)/4,e.gpad.b0=r.buttons[0].value>=.5,e.gpad.b1=r.buttons[1].value>=.5,e.gpad.b8=r.buttons[8].value>=.5,e.gpad.b9=r.buttons[9].value>=.5,e.gpad.lb=r.buttons[4].value>=.5,e.gpad.rb=r.buttons[5].value>=.5,e.gpad.lt=r.buttons[6].value>=.5,e.gpad.rt=r.buttons[7].value>=.5}},ve=e=>{e.mkey.mx=0,e.mkey.my=0},we=e=>e.timer.dt,G=(e,t,r)=>{if(t){const n=e.mkey;if(t==="wasd"){const o=n.a?-1:n.d?1:0,s=n.w?1:n.s?-1:0;if(o!==0||s!==0)return w(o,s)}else if(t==="arrow"){const o=n.right?1:n.left?-1:0,s=n.up?1:n.down?-1:0;if(o!==0||s!==0)return w(o,s)}else{if(t==="mouse")return w(n.mx,-n.my);if(n[t])return[1,0]}}if(r){const n=e.gpad;if(r==="ls")return w(n.lx,-n.ly);if(r==="rs")return w(n.rx,-n.ry);if(e.gpad[r])return[1,0]}return null},xe=e=>{e.camera={eye:[0,0,0],ha:0,va:0,fov:30,near:.1,far:1e3},e.light={ha:0,va:0,color:[0,0,0,0],ambient0:[0,0,0,0],ambient1:[0,0,0,0]},e.room=[],e.celeste=[],e.mob=[],e.lines=[]},B=(e,t)=>{Se(e,t),Ge(e,t),Pe(e,t),_e(e,t)},Se=(e,t)=>{t.camera&&Object.assign(e.camera,t.camera)},Ge=(e,t)=>{t.light&&(t.light.ha!==void 0&&(e.light.ha=t.light.ha),t.light.va!==void 0&&(e.light.va=t.light.va),e.light.color=S(t.light.color,0,0,0,0),e.light.ambient0=S(t.light.ambient0,0,0,0,0),e.light.ambient1=S(t.light.ambient1,0,0,0,0))},Pe=(e,t)=>{t.room&&(e.room=t.room)},_e=(e,t)=>{if(t.lines)for(const r of t.lines)e.lines.push({pos:r.from,color:r.color}),e.lines.push({pos:r.to,color:r.color})},M=(e,t,r,n,o,s)=>(e&&(t+=e.x||0,r+=e.y||0,n+=e.z||0,o+=e.ha||0,s+=e.va||0),[t,r,n,o,s]),S=(e,t,r,n,o)=>(e&&(e.r!==void 0&&(t=e.r),e.g!==void 0&&(r=e.g),e.r!==void 0&&(n=e.b),e.a!==void 0&&(o=e.a)),[t,r,n,o]),Ee=e=>{e.loading+=1,(async()=>{const n=await(await fetch("app.json")).json();if(Object.assign(e,n),e.gpu){const o=e.gpu;o.adapter=await navigator.gpu.requestAdapter(),o.device=await o.adapter.requestDevice(),o.canvasFormat=navigator.gpu.getPreferredCanvasFormat(),o.canvas=x(),o.context=o.canvas.getContext("webgpu"),o.context.configure({device:o.device,format:o.canvasFormat,alphaMode:"opaque"});const s=o.device;if(o.buffer)for(let i=0;i<o.buffer.length;++i){const c=o.buffer[i],f=await Be(n.embed[c.embed]),l=s.createBuffer({size:f.length,usage:GPUBufferUsage.VERTEX|GPUBufferUsage.INDEX,mappedAtCreation:!0}),u=new DataView(l.getMappedRange());for(let a=0;a<f.length;++a)u.setUint8(a,f[a]);l.unmap(),o.buffer[i]=l}if(o.shader)for(let i=0;i<o.shader.length;++i){const c=o.shader[i],f=await Ue(n.embed[c.embed]),l=s.createShaderModule({code:f});o.shader[i]=l}ce(e.gpu),he(e.gpu)}e.listen&&ye(e.listen),e.view&&xe(e.view),delete e.embed,e.loading-=1})()},Be=async e=>{const t=window.atob(e),r=new Uint8Array(t.length);for(let s=0;s<t.length;++s)r[s]=t.charCodeAt(s);const n=new Blob([r]).stream().pipeThrough(new DecompressionStream("deflate-raw")),o=await new Response(n).arrayBuffer();return new Uint8Array(o)},Ue=async e=>{const t=window.atob(e),r=new Uint8Array(t.length);for(let s=0;s<t.length;++s)r[s]=t.charCodeAt(s);const n=new Blob([r]).stream().pipeThrough(new DecompressionStream("deflate-raw"));return await new Response(n).text()},Re=async(e,t)=>{if(!navigator.gpu){O("ERROR: WebGPU not supported.");return}const r={loading:0};Ee(r);const n=o=>{Le(r)&&(ge(r.listen,o),be(r.gpu),e&&(e(r),e=null),t&&t(r),pe(r.gpu,r.view),ve(r.listen)),requestAnimationFrame(n)};requestAnimationFrame(n)},Le=e=>e.loading<=0,F=(e,t)=>e.json[t],Ve=e=>{H(),B(e.view,F(e,"sample")),B(e.view,F(e,"room000")),Me(e)},Ae=e=>{const t=e.listen,r=e.view,n=r.camera,o=we(t),s=G(t,"wasd","ls"),i=G(t,"mouse","rs");if(i){const a=-i[0],m=i[1];n.ha+=90*o*a,n.va+=90*o*m,n.va=Math.max(-60,Math.min(n.va,80))}if(s){const a=y(n.ha+90),m=y(n.ha),d=-s[0],p=s[1],b=d*Math.cos(a)+p*Math.cos(m),g=d*Math.sin(a)+p*Math.sin(m),_=2*o*b,E=2*o*g;n.eye[0]+=_,n.eye[2]+=E}G(t,"q","lb")&&(n.eye[1]-=.75*o),G(t,"e","rb")&&(n.eye[1]+=.75*o);const l=r.light;l.ha+=45*o};h(window,"load",()=>{O("Welcome Basilico."),Re(Ve,Ae)});const Me=e=>{const t=[];t.push({from:[-50,0,0],to:[50,0,0],color:[255,0,0,255]}),t.push({from:[0,0,-50],to:[0,0,50],color:[0,0,255,255]}),B(e.view,{lines:t})};})();
