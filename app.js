(()=>{const h=(e,t,n)=>{e.addEventListener(t,n)},E=()=>document.getElementById("canvas"),T=()=>document.getElementById("message"),Y=()=>{E().requestPointerLock()},v=()=>document.pointerLockElement===E(),O=e=>{const t=T();t.style.display="",t.textContent=e},J=()=>{const e=T();e.style.display="none"};const Q=(e,t)=>Math.floor(e/t),Z=(e,t)=>(e%t+t)%t,g=e=>e/180*Math.PI,ee=(e,t)=>Math.sqrt(e*e+t*t),G=(e,t)=>{const n=ee(e,t);return n!=0?[e/n,t/n]:[0,0]};const B=(e,t)=>e[0]*t[0]+e[1]*t[1]+e[2]*t[2],te=e=>{const t=B(e,e);return Math.sqrt(t)},ne=(e,t)=>[e[0]+t[0],e[1]+t[1],e[2]+t[2]],re=(e,t)=>[e[0]-t[0],e[1]-t[1],e[2]-t[2]];const F=e=>{const t=te(e);return[e[0]/t,e[1]/t,e[2]/t]},L=(e,t)=>[e[1]*t[2]-e[2]*t[1],e[2]*t[0]-e[0]*t[2],e[0]*t[1]-e[1]*t[0]],M=(e,t)=>{const n=g(e),r=g(t);return[Math.cos(r)*Math.cos(n),Math.sin(r),Math.cos(r)*Math.sin(n)]},oe=()=>[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],se=(e,t)=>[e[0]*t[0]+e[1]*t[4]+e[2]*t[8]+e[3]*t[12],e[0]*t[1]+e[1]*t[5]+e[2]*t[9]+e[3]*t[13],e[0]*t[2]+e[1]*t[6]+e[2]*t[10]+e[3]*t[14],e[0]*t[3]+e[1]*t[7]+e[2]*t[11]+e[3]*t[15],e[4]*t[0]+e[5]*t[4]+e[6]*t[8]+e[7]*t[12],e[4]*t[1]+e[5]*t[5]+e[6]*t[9]+e[7]*t[13],e[4]*t[2]+e[5]*t[6]+e[6]*t[10]+e[7]*t[14],e[4]*t[3]+e[5]*t[7]+e[6]*t[11]+e[7]*t[15],e[8]*t[0]+e[9]*t[4]+e[10]*t[8]+e[11]*t[12],e[8]*t[1]+e[9]*t[5]+e[10]*t[9]+e[11]*t[13],e[8]*t[2]+e[9]*t[6]+e[10]*t[10]+e[11]*t[14],e[8]*t[3]+e[9]*t[7]+e[10]*t[11]+e[11]*t[15],e[12]*t[0]+e[13]*t[4]+e[14]*t[8]+e[15]*t[12],e[12]*t[1]+e[13]*t[5]+e[14]*t[9]+e[15]*t[13],e[12]*t[2]+e[13]*t[6]+e[14]*t[10]+e[15]*t[14],e[12]*t[3]+e[13]*t[7]+e[14]*t[11]+e[15]*t[15]],ie=e=>{const t=e[0]*e[5]-e[1]*e[4],n=e[0]*e[6]-e[2]*e[4],r=e[0]*e[7]-e[3]*e[4],o=e[1]*e[6]-e[2]*e[5],s=e[1]*e[7]-e[3]*e[5],i=e[2]*e[7]-e[3]*e[6],a=e[8]*e[13]-e[9]*e[12],d=e[8]*e[14]-e[10]*e[12],l=e[8]*e[15]-e[11]*e[12],m=e[9]*e[14]-e[10]*e[13],u=e[9]*e[15]-e[11]*e[13],f=e[10]*e[15]-e[11]*e[14];let c=t*f-n*u+r*m+o*l-s*d+i*a;return c?(c=1/c,[(e[5]*f-e[6]*u+e[7]*m)*c,(e[2]*u-e[1]*f-e[3]*m)*c,(e[13]*i-e[14]*s+e[15]*o)*c,(e[10]*s-e[9]*i-e[11]*o)*c,(e[6]*l-e[4]*f-e[7]*d)*c,(e[0]*f-e[2]*l+e[3]*d)*c,(e[14]*r-e[12]*i-e[15]*n)*c,(e[8]*i-e[10]*r+e[11]*n)*c,(e[4]*u-e[5]*l+e[7]*a)*c,(e[1]*l-e[0]*u-e[3]*a)*c,(e[12]*s-e[13]*r+e[15]*t)*c,(e[9]*r-e[8]*s-e[11]*t)*c,(e[5]*d-e[4]*m-e[6]*a)*c,(e[0]*m-e[1]*d+e[2]*a)*c,(e[13]*n-e[12]*o-e[14]*t)*c,(e[8]*o-e[9]*n+e[10]*t)*c]):oe()};const ce=(e,t,n,r)=>{e[12]=t,e[13]=n,e[14]=r},ae=(e,t)=>{const n=g(e),r=Math.sin(n),o=Math.cos(n);return[o,0,r,0,0,1,0,0,-r,0,o,0,0,0,0,1]};const fe=(e,t,n)=>{const r=F(re(t,e)),o=F(L(n,r)),s=L(r,o),i=B(e,o),a=B(e,s),d=B(e,r);return[o[0],s[0],r[0],0,o[1],s[1],r[1],0,o[2],s[2],r[2],0,-i,-a,-d,1]},de=(e,t,n,r)=>{const o=1/Math.tan(e),s=o/t,i=r/(r-n),a=-(i*n);return[s,0,0,0,0,o,0,0,0,0,i,1,0,0,a,0]};const le=async(e,t)=>{e.adapter=await navigator.gpu.requestAdapter(),e.device=await e.adapter.requestDevice(),e.canvasFormat=navigator.gpu.getPreferredCanvasFormat(),e.canvas=E(),e.context=e.canvas.getContext("webgpu"),e.context.configure({device:e.device,format:e.canvasFormat,alphaMode:"opaque"});const n=e.device;if(e.buffer)for(let o=0;o<e.buffer.length;++o){const s=e.buffer[o],i=await Ae(t[s.embed]),a=n.createBuffer({size:i.length,usage:GPUBufferUsage.VERTEX|GPUBufferUsage.INDEX,mappedAtCreation:!0}),d=new DataView(a.getMappedRange());for(let l=0;l<i.length;++l)d.setUint8(l,i[l]);a.unmap(),e.buffer[o]=a}if(e.shader)for(let o=0;o<e.shader.length;++o){const s=e.shader[o],i=await Ve(t[s.embed]),a=n.createShaderModule({code:i});e.shader[o]=a}e.bindGroupLayout=[],e.pipelineLayout=[],e.pipeline=[],e.sampler=[],e.bindGroup=[],e.cbuffer=[],e.gbuffer=[];const r=(o,s,i)=>{e.cbuffer[o]=n.createBuffer({size:s,usage:i|GPUBufferUsage.COPY_DST})};r(0,512,GPUBufferUsage.UNIFORM),r(1,229376,GPUBufferUsage.STORAGE),r(2,65536,GPUBufferUsage.VERTEX),r(3,40960,GPUBufferUsage.INDIRECT),r(4,49152,GPUBufferUsage.VERTEX),r(5,16384,GPUBufferUsage.VERTEX),e.sampler[0]=n.createSampler({magFilter:"linear",minFilter:"linear",mipmapFilter:"linear"}),e.bindGroupLayout[0]=n.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.VERTEX,buffer:{}},{binding:1,visibility:GPUShaderStage.VERTEX|GPUShaderStage.FRAGMENT,buffer:{type:"read-only-storage"}}]}),e.bindGroupLayout[1]=n.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.FRAGMENT,buffer:{}},{binding:1,visibility:GPUShaderStage.FRAGMENT,texture:{sampleType:"depth"}},{binding:2,visibility:GPUShaderStage.FRAGMENT,texture:{}},{binding:3,visibility:GPUShaderStage.FRAGMENT,texture:{}},{binding:4,visibility:GPUShaderStage.FRAGMENT,texture:{}},{binding:5,visibility:GPUShaderStage.FRAGMENT,sampler:{}}]}),e.pipelineLayout[0]=n.createPipelineLayout({bindGroupLayouts:[e.bindGroupLayout[0]]}),e.pipelineLayout[1]=n.createPipelineLayout({bindGroupLayouts:[e.bindGroupLayout[1]]}),e.bindGroup[0]=n.createBindGroup({layout:e.bindGroupLayout[0],entries:[{binding:0,resource:{buffer:e.cbuffer[0]}},{binding:1,resource:{buffer:e.cbuffer[1]}}]}),pe(e)},ue=(e,t)=>{for(let n=0;n<e.id.length;++n)if(e.id[n].name===t)return n;return-1},me=(e,t)=>{const n=e.device,r=new Float32Array(68);{const o=t.camera,s=e.canvas.width/e.canvas.height,i=g(o.fov),[a,d,l,m,u]=R(o.offset,0,0,0,0,0),f=M(m,u),c=[a,d,l],y=ne(c,f),b=fe(c,y,[0,1,0]),S=de(i,s,o.near,o.far),P=se(b,S),U=ie(P);r.set(P,0),r.set(U,16),r.set(b,32),r.set(c,48)}{const o=t.light,[s,i,a,d,l]=R(o.offset,0,0,0,0,0),m=w(o.color,0,0,0,0),u=w(o.ambient0,0,0,0,0),f=w(o.ambient1,0,0,0,0),c=M(d,l);r.set(c,52),r.set(m,56),r.set(u,60),r.set(f,64)}n.queue.writeBuffer(e.cbuffer[0],0,r)},he=(e,t)=>{const n=e.device;if(!t.lines||t.lines.length<=0)return 0;const r=new Float32Array(t.lines.length*3),o=new Uint8Array(t.lines.length*4);for(let s=0;s<t.lines.length;++s){const i=t.lines[s];r[s*3+0]=i.pos[0],r[s*3+1]=i.pos[1],r[s*3+2]=i.pos[2],o[s*4+0]=i.color[0],o[s*4+1]=i.color[1],o[s*4+2]=i.color[2],o[s*4+3]=i.color[3]}return n.queue.writeBuffer(e.cbuffer[4],0,r),n.queue.writeBuffer(e.cbuffer[5],0,o),t.lines.length},ye=(e,t,n)=>{const r=e.device,o=[];o.length=e.mesh.length;for(let f=0;f<o.length;++f)o[f]=[];const s=new Float32Array(28),i=4*28;let a=0;for(const f of t.room){const c=Te(n,f.name);if(c)for(let y=0;y<c.indices.length;++y){const x=c.node[c.indices[y]];if(!x)continue;const b=Z(y,c.divisor),S=Q(y,c.divisor),[P,U,$,D,k]=R(f.offset,b*c.unit,0,S*c.unit,0,0);for(const I of x.mesh){const p=c.mesh[I];if(!p)continue;const A=ue(e,p.name);if(A<0)continue;for(const K of e.id[A].mesh)o[K].push(a);const[C,z,q,N,X]=R(p.offset,P,U,$,D,k),V=ae(N,X);ce(V,C,z,q);const W=w(p.factor0,1,1,1,1),j=w(p.factor1,1,1,1,0),H=w(p.factor2,0,0,0,0);s.set(V,0),s.set(W,16),s.set(j,20),s.set(H,24),r.queue.writeBuffer(e.cbuffer[1],a*i,s),a+=1}}}const d=[];let l=0,m=0;const u=new Uint32Array(5);for(let f=0;f<o.length;++f){if(o[f].length<=0)continue;const c=e.mesh[f],y=o[f].length;r.queue.writeBuffer(e.cbuffer[2],l*4,new Uint32Array(o[f])),u[0]=c.count,u[1]=y,u[2]=0,u[3]=0,u[4]=0,r.queue.writeBuffer(e.cbuffer[3],m,u),d.push({id:f,first:l,offset:m}),l+=y,m+=20}return d},be=e=>{const t=e.device,n=e.canvas;if(n.width!==n.clientWidth||n.height!==n.clientHeight){n.width=n.clientWidth,n.height=n.clientHeight;const s=a=>{e.gbuffer[a]!==void 0&&(e.gbuffer[a].destroy(),delete e.gbuffer[a])};s(0),s(1),s(2),s(3),s(4);const i=a=>{e.bindGroup[a]!==void 0&&delete e.bindGroup[a]};i(1),i(2),i(3)}const r=(s,i)=>{e.gbuffer[s]===void 0&&(e.gbuffer[s]=t.createTexture({size:[n.width,n.height],format:i,usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING}))};r(0,"depth32float"),r(1,"rgb10a2unorm"),r(2,"rgba8unorm"),r(3,"rgba8unorm"),r(4,"rgba16float");const o=(s,i,a,d,l)=>{e.bindGroup[s]===void 0&&(e.bindGroup[s]=t.createBindGroup({layout:e.bindGroupLayout[1],entries:[{binding:0,resource:{buffer:e.cbuffer[0]}},{binding:1,resource:e.gbuffer[i].createView()},{binding:2,resource:e.gbuffer[a].createView()},{binding:3,resource:e.gbuffer[d].createView()},{binding:4,resource:e.gbuffer[l].createView()},{binding:5,resource:e.sampler[0]}]}))};o(1,0,1,2,3),o(2,0,1,1,1),o(3,0,4,4,4)},pe=e=>{const t=e.device;e.pipeline[0]=t.createRenderPipeline({layout:e.pipelineLayout[0],vertex:{module:e.shader[0],entryPoint:"VS",buffers:[{arrayStride:4,attributes:[{format:"uint32",offset:0,shaderLocation:0}],stepMode:"instance"},{arrayStride:12,attributes:[{format:"float32x3",offset:0,shaderLocation:1}]},{arrayStride:12,attributes:[{format:"float32x3",offset:0,shaderLocation:2}]}]},fragment:{module:e.shader[0],entryPoint:"FS",targets:[{format:"rgb10a2unorm"},{format:"rgba8unorm"},{format:"rgba8unorm"},{format:"rgba16float"}]},depthStencil:{depthWriteEnabled:!0,depthCompare:"less",format:"depth32float"},primitive:{cullMode:"back",frontFace:"cw"}}),e.pipeline[1]=t.createRenderPipeline({layout:e.pipelineLayout[1],vertex:{module:e.shader[1],entryPoint:"VS",buffers:[]},fragment:{module:e.shader[1],entryPoint:"FS_SSAO",targets:[{format:"rgba8unorm",blend:{color:{operation:"min",srcFactor:"one",dstFactor:"one"},alpha:{}},writeMask:GPUColorWrite.RED}]}}),e.pipeline[2]=t.createRenderPipeline({layout:e.pipelineLayout[1],vertex:{module:e.shader[1],entryPoint:"VS",buffers:[]},fragment:{module:e.shader[1],entryPoint:"FS_HDR",targets:[{format:"rgba16float",blend:{color:{operation:"add",srcFactor:"one",dstFactor:"one"},alpha:{}}}]},depthStencil:{depthWriteEnabled:!1,depthCompare:"not-equal",format:"depth32float"}}),e.pipeline[3]=t.createRenderPipeline({layout:e.pipelineLayout[1],vertex:{module:e.shader[1],entryPoint:"VS",buffers:[]},fragment:{module:e.shader[1],entryPoint:"FS_HDRSky",targets:[{format:"rgba16float",blend:{color:{operation:"add",srcFactor:"one",dstFactor:"one"},alpha:{}}}]},depthStencil:{depthWriteEnabled:!1,depthCompare:"equal",format:"depth32float"}}),e.pipeline[4]=t.createRenderPipeline({layout:e.pipelineLayout[1],vertex:{module:e.shader[1],entryPoint:"VS",buffers:[]},fragment:{module:e.shader[1],entryPoint:"FS_HDR2LDR",targets:[{format:e.canvasFormat}]},depthStencil:{depthWriteEnabled:!1,depthCompare:"always",format:"depth32float"}}),e.pipeline[5]=t.createRenderPipeline({layout:e.pipelineLayout[0],vertex:{module:e.shader[2],entryPoint:"VS",buffers:[{arrayStride:12,attributes:[{format:"float32x3",offset:0,shaderLocation:0}]},{arrayStride:4,attributes:[{format:"unorm8x4",offset:0,shaderLocation:1}]}]},fragment:{module:e.shader[2],entryPoint:"FS",targets:[{format:e.canvasFormat}]},depthStencil:{depthWriteEnabled:!1,depthCompare:"less",format:"depth32float"},primitive:{topology:"line-list"}})},ve=e=>{be(e)},we=(e,t,n)=>{me(e,t);const r=ye(e,t,n),o=he(e,t),s=e.device,i=s.createCommandEncoder();ge(i,e,r),xe(i,e),Se(i,e),Ge(i,e,o),s.queue.submit([i.finish()])},ge=(e,t,n)=>{const r=e.beginRenderPass({depthStencilAttachment:{view:t.gbuffer[0].createView(),depthClearValue:1,depthLoadOp:"clear",depthStoreOp:"store"},colorAttachments:[{view:t.gbuffer[1].createView(),clearValue:{r:0,g:0,b:0,a:0},loadOp:"clear",storeOp:"store"},{view:t.gbuffer[2].createView(),clearValue:{r:0,g:0,b:0,a:0},loadOp:"clear",storeOp:"store"},{view:t.gbuffer[3].createView(),clearValue:{r:1,g:0,b:0,a:0},loadOp:"clear",storeOp:"store"},{view:t.gbuffer[4].createView(),clearValue:{r:0,g:0,b:0,a:0},loadOp:"clear",storeOp:"store"}]});for(const o of n){r.setPipeline(t.pipeline[0]),r.setBindGroup(0,t.bindGroup[0]),r.setVertexBuffer(0,t.cbuffer[2],o.first*4);const s=t.mesh[o.id];if(s.vb0){const[i,a,d]=s.vb0;r.setVertexBuffer(1,t.buffer[i],a,d)}if(s.vb1){const[i,a,d]=s.vb1;r.setVertexBuffer(2,t.buffer[i],a,d)}if(s.ib){const[i,a,d]=s.ib;r.setIndexBuffer(t.buffer[i],"uint16",a,d)}r.drawIndexedIndirect(t.cbuffer[3],o.offset)}r.end()},xe=(e,t)=>{const n=e.beginRenderPass({colorAttachments:[{view:t.gbuffer[3].createView(),loadOp:"load",storeOp:"store"}]});n.setPipeline(t.pipeline[1]),n.setBindGroup(0,t.bindGroup[2]),n.draw(4),n.end()},Se=(e,t)=>{const n=e.beginRenderPass({depthStencilAttachment:{view:t.gbuffer[0].createView(),depthReadOnly:!0},colorAttachments:[{view:t.gbuffer[4].createView(),loadOp:"load",storeOp:"store"}]});n.setPipeline(t.pipeline[2]),n.setBindGroup(0,t.bindGroup[1]),n.draw(4),n.setPipeline(t.pipeline[3]),n.draw(4),n.end()},Ge=(e,t,n)=>{const r=e.beginRenderPass({depthStencilAttachment:{view:t.gbuffer[0].createView(),depthReadOnly:!0},colorAttachments:[{view:t.context.getCurrentTexture().createView(),clearValue:{r:0,g:0,b:0,a:0},loadOp:"clear",storeOp:"store"}]});r.setPipeline(t.pipeline[4]),r.setBindGroup(0,t.bindGroup[3]),r.draw(4),n&&(r.setPipeline(t.pipeline[5]),r.setBindGroup(0,t.bindGroup[0]),r.setVertexBuffer(0,t.cbuffer[4]),r.setVertexBuffer(1,t.cbuffer[5]),r.draw(n)),r.end()},Pe=e=>{e.timer.t=performance.now();const t={KeyW:"w",KeyA:"a",KeyS:"s",KeyD:"d",ArrowUp:"up",ArrowLeft:"left",ArrowDown:"down",ArrowRight:"right",KeyQ:"q",KeyE:"e",KeyZ:"z",KeyX:"x",Space:"space",ControlLeft:"lctrl",Escape:"esc"},n={0:"b0",1:"b1",2:"b2",3:"b3",4:"b4"};h(window,"focus",r=>{}),h(window,"blur",r=>{const o=e.mkey;for(const s in t)o[t[s]]=!1;for(const s in n)o[n[s]]=!1;o.mx=0,o.my=0}),h(window,"resize",r=>{}),h(window,"gamepadconnected",r=>{e.gpad.id=r.gamepad.index}),h(window,"gamepaddisconnected",r=>{e.gpad.id===r.gamepad.index&&(e.gpad.id=null)}),h(document,"keydown",r=>{if(v()){const o=t[r.code];o&&(e.mkey[o]=!0,r.preventDefault())}}),h(document,"keyup",r=>{if(v()){const o=t[r.code];o&&(e.mkey[o]=!1,r.preventDefault())}}),h(document,"click",r=>{v()||Y()}),h(document,"mousedown",r=>{if(v()){const o=n[r.button];o&&(e.mkey[o]=!0,r.preventDefault())}}),h(document,"mouseup",r=>{if(v()){const o=n[r.button];o&&(e.mkey[o]=!1,r.preventDefault())}}),h(document,"mousemove",r=>{v()&&(e.mkey.mx=r.movementX,e.mkey.my=r.movementY,r.preventDefault())}),h(document.body,"contextmenu",r=>{r.preventDefault()})},_e=(e,t)=>{{const n=e.timer;n.dt=(t-n.t)/1e3,n.t=t,n.n+=1}{const n=e.gpad;if(n.id!==null){const r=navigator.getGamepads()[n.id];n.lx=Math.trunc(r.axes[0]*4)/4,n.ly=Math.trunc(r.axes[1]*4)/4,n.rx=Math.trunc(r.axes[2]*4)/4,n.ry=Math.trunc(r.axes[3]*4)/4,n.b0=r.buttons[0].value>=.5,n.b1=r.buttons[1].value>=.5,n.b8=r.buttons[8].value>=.5,n.b9=r.buttons[9].value>=.5,n.lb=r.buttons[4].value>=.5,n.rb=r.buttons[5].value>=.5,n.lt=r.buttons[6].value>=.5,n.rt=r.buttons[7].value>=.5}}},Be=e=>{{const t=e.mkey;t.mx=0,t.my=0}},Re=e=>e.func.timer.dt,_=(e,t,n)=>{const r=e.func;if(t){const o=r.mkey;if(t==="wasd"){const s=o.a?-1:o.d?1:0,i=o.w?1:o.s?-1:0;if(s!==0||i!==0)return G(s,i)}else if(t==="arrow"){const s=o.right?1:o.left?-1:0,i=o.up?1:o.down?-1:0;if(s!==0||i!==0)return G(s,i)}else if(t==="mouse"){const s=o.mx,i=-o.my;if(s!==0||i!==0)return G(s,i)}else if(o[t])return[1,0]}if(n){const o=r.gpad;if(n==="ls")return G(o.lx,-o.ly);if(n==="rs")return G(o.rx,-o.ry);if(o[n])return[1,0]}return null},Ue=(e,t)=>{e.lines=[];for(const n of t)e.lines.push({pos:n.from,color:n.color}),e.lines.push({pos:n.to,color:n.color})},R=(e,t,n,r,o,s)=>(e&&(t+=e.x||0,n+=e.y||0,r+=e.z||0,o+=e.ha||0,s+=e.va||0),[t,n,r,o,s]),w=(e,t,n,r,o)=>(e&&(e.r!==void 0&&(t=e.r),e.g!==void 0&&(n=e.g),e.r!==void 0&&(r=e.b),e.a!==void 0&&(o=e.a)),[t,n,r,o]),Ee=e=>{e.loading+=1,(async()=>{const r=await(await fetch("app.json")).json();Object.assign(e,r),e.gpu&&await le(e.gpu,e.embed),e.func&&Pe(e.func),delete e.embed,e.loading-=1})()},Ae=async e=>{const t=window.atob(e),n=new Uint8Array(t.length);for(let s=0;s<t.length;++s)n[s]=t.charCodeAt(s);const r=new Blob([n]).stream().pipeThrough(new DecompressionStream("deflate-raw")),o=await new Response(r).arrayBuffer();return new Uint8Array(o)},Ve=async e=>{const t=window.atob(e),n=new Uint8Array(t.length);for(let s=0;s<t.length;++s)n[s]=t.charCodeAt(s);const r=new Blob([n]).stream().pipeThrough(new DecompressionStream("deflate-raw"));return await new Response(r).text()},Fe=async(e,t)=>{if(!navigator.gpu){O("ERROR: WebGPU not supported.");return}const n={loading:0};Ee(n);const r=o=>{Le(n)&&(_e(n.func,o),ve(n.gpu),e&&(e(n),e=null),t&&t(n),we(n.gpu,n.view,n),Be(n.func)),requestAnimationFrame(r)};requestAnimationFrame(r)},Le=e=>e.loading<=0,Me=(e,t)=>e.json[t],Te=(e,t)=>e.room[t],Oe=e=>{J(),Object.assign(e.view,Me(e,"sample")),De(e)},$e=e=>{const t=e.view,n=t.camera,r=Re(e),o=_(e,"wasd","ls"),s=_(e,"mouse","rs");if(s){const m=-s[0],u=s[1];n.offset.ha+=90*r*m,n.offset.va+=90*r*u,n.offset.va=Math.max(-60,Math.min(n.offset.va,80))}if(o){const m=g(n.offset.ha+90),u=g(n.offset.ha),f=-o[0],c=o[1],y=f*Math.cos(m)+c*Math.cos(u),x=f*Math.sin(m)+c*Math.sin(u),b=2*r*y,S=2*r*x;n.offset.x+=b,n.offset.z+=S}_(e,"q","lb")&&(n.offset.y-=.75*r),_(e,"e","rb")&&(n.offset.y+=.75*r);const d=t.light;d.offset.ha+=45*r};h(window,"load",()=>{O("Welcome Basilico."),Fe(Oe,$e)});const De=e=>{const t=[];t.push({from:[-50,0,0],to:[50,0,0],color:[255,0,0,255]}),t.push({from:[0,0,-50],to:[0,0,50],color:[0,0,255,255]}),Ue(e.view,t)};})();
