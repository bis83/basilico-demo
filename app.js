(()=>{const p=e=>{const t=window.atob(e),n=new ArrayBuffer(t.length),o=new DataView(n);for(let s=0;s<t.length;++s)o.setUint8(s,t.charCodeAt(s));return n},H=e=>new Float32Array(p(e));const m=e=>e/180*Math.PI,K=(e,t)=>Math.sqrt(e*e+t*t),G=(e,t)=>{const n=K(e,t);return n!=0?[e/n,t/n]:[0,0]},l=()=>new Float32Array(3),v=(e,t)=>e[0]*t[0]+e[1]*t[1]+e[2]*t[2],W=e=>Math.sqrt(v(e,e));const I=(e,t,n,o)=>{e.set([t,n,o])},q=(e,t,n)=>{e.set([t[0]+n[0],t[1]+n[1],t[2]+n[2]])},J=(e,t,n)=>{e.set([t[0]-n[0],t[1]-n[1],t[2]-n[2]])},P=e=>{const t=W(e);e.set([e[0]/t,e[1]/t,e[2]/t])},D=(e,t,n)=>{e.set([t[1]*n[2]-t[2]*n[1],t[2]*n[0]-t[0]*n[2],t[0]*n[1]-t[1]*n[0]])},Q=(e,t,n)=>{const o=m(t),s=m(n);e.set([Math.cos(s)*Math.cos(o),Math.sin(s),Math.cos(s)*Math.sin(o)])},w=()=>new Float32Array(16),Z=(e,t)=>{e.set(t)};const $=(e,t)=>{const n=[e[0]*t[0]+e[1]*t[4]+e[2]*t[8]+e[3]*t[12],e[0]*t[1]+e[1]*t[5]+e[2]*t[9]+e[3]*t[13],e[0]*t[2]+e[1]*t[6]+e[2]*t[10]+e[3]*t[14],e[0]*t[3]+e[1]*t[7]+e[2]*t[11]+e[3]*t[15],e[4]*t[0]+e[5]*t[4]+e[6]*t[8]+e[7]*t[12],e[4]*t[1]+e[5]*t[5]+e[6]*t[9]+e[7]*t[13],e[4]*t[2]+e[5]*t[6]+e[6]*t[10]+e[7]*t[14],e[4]*t[3]+e[5]*t[7]+e[6]*t[11]+e[7]*t[15],e[8]*t[0]+e[9]*t[4]+e[10]*t[8]+e[11]*t[12],e[8]*t[1]+e[9]*t[5]+e[10]*t[9]+e[11]*t[13],e[8]*t[2]+e[9]*t[6]+e[10]*t[10]+e[11]*t[14],e[8]*t[3]+e[9]*t[7]+e[10]*t[11]+e[11]*t[15],e[12]*t[0]+e[13]*t[4]+e[14]*t[8]+e[15]*t[12],e[12]*t[1]+e[13]*t[5]+e[14]*t[9]+e[15]*t[13],e[12]*t[2]+e[13]*t[6]+e[14]*t[10]+e[15]*t[14],e[12]*t[3]+e[13]*t[7]+e[14]*t[11]+e[15]*t[15]];e.set(n)};const g=(e,t,n,o)=>{const s=l();J(s,n,t),P(s);const c=l();D(c,o,s),P(c);const a=l();D(a,s,c);const u=v(t,c),r=v(t,a),i=v(t,s);e.set([c[0],a[0],s[0],0,c[1],a[1],s[1],0,c[2],a[2],s[2],0,-u,-r,-i,1])},ee=(e,t,n,o,s)=>{const c=1/Math.tan(t),a=c/n,u=s/(s-o),r=-(u*o);e.set([a,0,0,0,0,c,0,0,0,0,u,1,0,0,r,0])},te=(e,t,n,o,s)=>{const c=2/t,a=2/n,u=1/(s-o),r=o/(o-s);e.set([c,0,0,0,0,a,0,0,0,0,u,0,0,0,r,1])};const d=(e,t,n)=>{e.addEventListener(t,n)};const U=0,O=1,N=2,F=3,ne=(e,t)=>{let n=e.createTexture();return e.bindTexture(e.TEXTURE_2D,n),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.LINEAR),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.LINEAR),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,t),e.bindTexture(e.TEXTURE_2D,null),n},oe=(e,t,n)=>{const o=document.createElement("canvas");if(!o)return null;o.width=t,o.height=n;const s=o.getContext("2d");return s?(s.fillStyle="white",s.textAlign="center",s.textBaseline="middle",s.font="24px monospace",s.fillText(e,o.width/2,o.height/2),o):null},X=(e,t,n)=>{const o=e.createShader(t);return e.shaderSource(o,n),e.compileShader(o),e.getShaderParameter(o,e.COMPILE_STATUS)?o:(e.deleteShader(o),null)},se=(e,t,n)=>{const o=e.createProgram();return e.attachShader(o,t),e.attachShader(o,n),e.linkProgram(o),e.getProgramParameter(o,e.LINK_STATUS)?o:(e.deleteProgram(o),null)},re=e=>{const t=window.innerWidth;t!==e.canvas.width&&(e.canvas.width=t);const n=window.innerHeight;n!==e.canvas.height&&(e.canvas.height=n)},ce=e=>{e.viewport(0,0,e.canvas.width,e.canvas.height),e.clearColor(0,0,0,1),e.clearDepth(1),e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER_BIT)},ae=(e,t,n)=>{e.enable(e.CULL_FACE),t?(e.enable(e.DEPTH_TEST),e.depthFunc(e.LEQUAL)):e.disable(e.DEPTH_TEST),n?(e.enable(e.BLEND),e.blendFunc(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA)):(e.disable(e.BLEND),e.blendFunc(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA))},M=(e,t,n)=>{let o=e.createBuffer();return e.bindBuffer(t,o),e.bufferData(t,n,e.STATIC_DRAW),o},b=(e,t,n,o,s,c,a)=>{e.enableVertexAttribArray(t),e.vertexAttribPointer(t,n,o,s,c,a)},ie=(e,t,n)=>{n=n||0;const o=t.iv[n*3+0],s=t.iv[n*3+1],c=t.iv[n*3+2],a=[null,e.POINTS,e.LINES,e.TRIANGLES];t.i?e.drawElements(a[o],c,e.UNSIGNED_SHORT,2*s):e.drawArrays(a[o],s,c)};const ue=e=>e,de=(e,t)=>{if(t.matrix){const n=H(t.matrix);t.count=Math.floor(n.length/16);const o=new Float32Array(t.count*64);for(let s=0;s<t.count;++s)for(j=0;j<16;++j)o[s*64+j]=n[s*16+j];t.size=64,t.stride=256,t.matrix=M(e,e.UNIFORM_BUFFER,o)}return t},le=(e,t)=>(t.prop&&(t.prop=t.prop.map(n=>de(e,n))),t),fe=(e,t)=>{if(t.vao=e.createVertexArray(),e.bindVertexArray(t.vao),t.b&&(t.b=M(e,e.ARRAY_BUFFER,p(t.b)),t.bv))for(let n=0;n<t.bv.length;n+=2)switch(t.bv[n]){case U:b(e,U,3,e.FLOAT,!1,0,t.bv[n+1]);break;case O:b(e,O,3,e.HALF_FLOAT,!1,0,t.bv[n+1]);break;case N:b(e,N,4,e.UNSIGNED_BYTE,!0,0,t.bv[n+1]);break;case F:b(e,F,2,e.HALF_FLOAT,!1,0,t.bv[n+1]);break}return t.i&&(t.i=M(e,e.ELEMENT_ARRAY_BUFFER,p(t.i))),e.bindVertexArray(null),t},he=(e,t)=>(t.texture=ne(e,oe(t.text,t.width,t.height)),t),Te=(e,t)=>{if(t.vs=X(e,e.VERTEX_SHADER,t.vs),t.fs=X(e,e.FRAGMENT_SHADER,t.fs),t.prog=se(e,t.vs,t.fs),t.u){const n={};for(let o of t.u)n[o]=e.getUniformLocation(t.prog,o);t.u=n}if(t.ub){const n={};let o=0;for(let s of t.ub){const c=e.getUniformBlockIndex(t.prog,s);e.uniformBlockBinding(t.prog,c,o),n[s]=o,o+=1}t.ub=n}return t},Ae=e=>(e.bundle=[],e),L=({bundle:e},t,n)=>{for(const o of e){if(!o[t])continue;const s=o[t].find(c=>c.name===n);if(!!s)return s}return null},_e=({gl:e,bundle:t},n)=>{const o="data/"+n+".json";fetch(o).then(s=>s.json()).then(s=>{s.update&&(s.update=s.update.map(c=>ue(c))),s.draw&&(s.draw=s.draw.map(c=>le(e,c))),s.mesh&&(s.mesh=s.mesh.map(c=>fe(e,c))),s.texture&&(s.texture=s.texture.map(c=>he(e,c))),s.shader&&(s.shader=s.shader.map(c=>Te(e,c))),t.push(s)})},S=0,f=1,y=2,Y=(e,t,n)=>{switch(t){case"KeyW":e.w=n;break;case"KeyA":e.a=n;break;case"KeyS":e.s=n;break;case"KeyD":e.d=n;break;case"Space":e.space=n;break;default:return!1}return!0},me=e=>(e.gamepad={mode:S,moveX:0,moveY:0,cameraX:0,cameraY:0,touches:new Map,mouse:{x:0,y:0,mx:0,my:0,lb:!1,rb:!1},keyboard:{w:!1,a:!1,s:!1,d:!1,space:!1},gamepadIndex:null,gamepad:{lx:0,ly:0,rx:0,ry:0,b0:!1,b1:!1,lt:!1,rt:!1}},e),xe=({gamepad:e})=>{const t=()=>{if(e.gamepadIndex!==null){const i=navigator.getGamepads()[e.gamepadIndex];e.gamepad.lx=Math.trunc(i.axes[0]*4)/4,e.gamepad.ly=Math.trunc(i.axes[1]*4)/4,e.gamepad.rx=Math.trunc(i.axes[2]*4)/4,e.gamepad.ry=Math.trunc(i.axes[3]*4)/4,e.gamepad.b0=i.buttons[0].value>=.5,e.gamepad.b1=i.buttons[1].value>=.5,e.gamepad.lt=i.buttons[6].value>=.5,e.gamepad.rt=i.buttons[7].value>=.5,!!(e.gamepad.lx||e.gamepad.ly||e.gamepad.rx||e.gamepad.ry||e.gamepad.b0||e.gamepad.b1||e.gamepad.lt||e.gamepad.rt)&&(e.mode=S)}},n=()=>{e.moveX=0,e.moveY=0,e.cameraX=0,e.cameraY=0},o=()=>{e.moveX=e.gamepad.lx,e.moveY=-e.gamepad.ly,e.cameraX=-e.gamepad.rx,e.cameraY=-e.gamepad.ry},s=()=>{e.moveX=e.keyboard.a?-1:e.keyboard.d?1:0,e.moveY=e.keyboard.w?1:e.keyboard.s?-1:0,e.mouse.lb?(e.cameraX=-e.mouse.mx,e.cameraY=-e.mouse.my):(e.cameraX=0,e.cameraY=0)},c=()=>{e.moveX=0,e.moveY=0,e.cameraX=0,e.cameraY=0;for(const r of e.touches.values())r.sx<window.innerWidth/2?(e.moveX=r.x-r.sx,e.moveY=-(r.y-r.sy)):(e.cameraX=-(r.x-r.sx),e.cameraY=-(r.y-r.sy))},a=()=>{[e.moveX,e.moveY]=G(e.moveX,e.moveY),[e.cameraX,e.cameraY]=G(e.cameraX,e.cameraY)},u=()=>{const r=i=>Math.trunc(i/2);e.mouse.mx=r(e.mouse.mx),e.mouse.my=r(e.mouse.my)};t(),e.mode===S?o():e.mode===f?s():e.mode===y?c():n(),a(),u()},Ee=({gamepad:e},t)=>{},ve=({gamepad:e},t)=>{e.gamepadIndex=t.gamepad.index,e.mode=S};const we=({gamepad:e},t)=>{Y(e.keyboard,t.code,!0)&&(e.mode=f,t.preventDefault())},be=({gamepad:e},t)=>{Y(e.keyboard,t.code,!1)&&(e.mode=f,t.preventDefault())},Se=({gamepad:e},t)=>{e.mouse.x=t.x,e.mouse.y=t.y,e.mouse.lb=(t.buttons&1)!=0,e.mouse.rb=(t.buttons&2)!=0,e.mode=f,t.preventDefault()},ye=({gamepad:e},t)=>{e.mouse.x=t.x,e.mouse.y=t.y,e.mouse.lb=(t.buttons&1)!=0,e.mouse.rb=(t.buttons&2)!=0,e.mode=f,t.preventDefault()},Re=({gamepad:e},t)=>{e.mouse.mx+=t.movementX||0,e.mouse.my+=t.movementY||0,e.mouse.x=t.x,e.mouse.y=t.y,e.mouse.lb=(t.buttons&1)!=0,e.mouse.rb=(t.buttons&2)!=0,e.mode=f,t.preventDefault()},pe=({gamepad:e},t)=>{for(const n of t.changedTouches)e.touches.set(n.identifier,{x:n.clientX,y:n.clientY,sx:n.clientX,sy:n.clientY});e.mode=y},C=({gamepad:e},t)=>{for(const n of t.changedTouches)e.touches.delete(n.identifier);e.mode=y},Ie=({gamepad:e},t)=>{for(const n of t.changedTouches){const o=e.touches.get(n.identifier);o&&(o.x=n.clientX,o.y=n.clientY)}e.mode=y},Me=e=>(e.save={scene:"",position:[0,0,0],angle:[0,0]},e),Le=({save:e},t)=>{e.scene=t},k=({save:e},t,n,o)=>{e.position=[t,n,o]},B=({save:e},t,n)=>{e.angle=[t,n]},Ge=e=>(e.frame={prevTime:performance.now(),deltaTime:0,pause:!0,viewProj:w(),ortho:w()},e),Pe=({frame:e})=>{const t=performance.now();e.deltaTime=(t-e.prevTime)/1e3,e.prevTime=t};const De=({frame:e},t,n,o,s,c)=>{const a=l(),u=l(),r=l(),i=l(),h=m(30),x=.1,R=1e3,E=w(),T=w();Q(a,s,c),I(u,t,n,o),I(r,t,n,o),q(r,r,a),I(i,0,1,0);const A=window.innerWidth,_=window.innerHeight;g(E,u,r,i),ee(T,h,A/_,x,R),Z(e.viewProj,E),$(e.viewProj,T),te(e.ortho,A,_,0,1)},Ue=e=>{Pe(e),xe(e)},Oe=e=>{const t=e.frame.deltaTime;let[n,o]=e.save.angle,[s,c,a]=e.save.position;const u=e.gamepad.cameraX,r=e.gamepad.cameraY,i=e.gamepad.moveX,h=e.gamepad.moveY,x=90,R=x*t*u,E=x*t*r;n+=R,o+=E;const T=4,A=m(n-90),_=m(n),V=T*t*(i*Math.cos(A)+h*Math.cos(_)),z=T*t*(i*Math.sin(A)+h*Math.sin(_));s+=V,a+=z,B(e,n,o),k(e,s,c,a)},Ne=e=>{const t=1.75,[n,o,s]=e.save.position,[c,a]=e.save.angle;De(e,n,o+t,s,c,a)},Fe=({gl:e})=>{re(e),ce(e)},Xe=e=>{ae(e.gl,!0,!1);const t=L(e,"draw",e.save.scene);if(!t)return;const n=L(e,"shader","mesh_pnc");if(!!n){e.gl.useProgram(n.prog),e.gl.uniformMatrix4fv(n.u.vp,!1,e.frame.viewProj);for(const o of t.prop){const s=L(e,"mesh",o.mesh);if(!!s){e.gl.bindVertexArray(s.vao);for(let c=0;c<o.count;++c)e.gl.bindBufferRange(e.gl.UNIFORM_BUFFER,n.ub.a,o.matrix,c*o.stride,o.size),ie(e.gl,s)}}}};d(window,"load",()=>{const e=document.getElementById("main"),t=e.getContext("webgl2"),n=new AudioContext,o={gl:t,audio:n};Ae(o),Ge(o),me(o),Me(o);const s={START:{SCENE:"sample",POSITION:[parseFloat("2"),parseFloat("0"),parseFloat("2")],ANGLE:[parseFloat("45"),parseFloat("0")]}};Le(o,s.START.SCENE),k(o,s.START.POSITION[0],s.START.POSITION[1],s.START.POSITION[2]),B(o,s.START.ANGLE[0],s.START.ANGLE[1]),_e(o,"core"),d(window,"focus",r=>{}),d(window,"blur",r=>{Ee(o,r)}),d(window,"resize",r=>{}),d(window,"gamepadconnected",r=>{ve(o,r)}),d(window,"gamepaddisconnected",r=>{store_gamepadGamepadDisconnectedAction(o,r)}),d(document,"keydown",r=>{we(o,r)}),d(document,"keyup",r=>{be(o,r)}),d(e,"mousedown",r=>{Se(o,r)}),d(e,"mouseup",r=>{ye(o,r)}),d(e,"mousemove",r=>{Re(o,r)}),d(e,"touchstart",r=>{pe(o,r)}),d(e,"touchend",r=>{C(o,r)}),d(e,"touchcancel",r=>{C(o,r)}),d(e,"touchmove",r=>{Ie(o,r)});const c=()=>{Ue(o),Oe(o),Ne(o)},a=()=>{Fe(o),Xe(o)},u=()=>{c(),a(),requestAnimationFrame(u)};u()});})();
