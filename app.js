(()=>{const p=(e,t,n)=>{e.addEventListener(t,n)},k=()=>document.getElementById("canvas"),J=()=>document.getElementById("message"),se=()=>{k().requestPointerLock()},F=()=>document.pointerLockElement===k(),K=e=>{const t=J();t.style.display="",t.textContent=e},ie=()=>{const e=J();e.style.display="none"};const x=e=>e!==void 0,ce=(e,t)=>Math.floor(e/t),ae=(e,t)=>(e%t+t)%t,B=e=>e/180*Math.PI;const V=(e,t)=>e[0]*t[0]+e[1]*t[1]+e[2]*t[2],fe=e=>{const t=V(e,e);return Math.sqrt(t)},de=(e,t)=>[e[0]+t[0],e[1]+t[1],e[2]+t[2]],le=(e,t)=>[e[0]-t[0],e[1]-t[1],e[2]-t[2]];const q=e=>{const t=fe(e);return[e[0]/t,e[1]/t,e[2]/t]},X=(e,t)=>[e[1]*t[2]-e[2]*t[1],e[2]*t[0]-e[0]*t[2],e[0]*t[1]-e[1]*t[0]],H=(e,t)=>{const n=B(e),o=B(t);return[Math.cos(o)*Math.cos(n),Math.sin(o),Math.cos(o)*Math.sin(n)]},ue=()=>[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],me=(e,t)=>[e[0]*t[0]+e[1]*t[4]+e[2]*t[8]+e[3]*t[12],e[0]*t[1]+e[1]*t[5]+e[2]*t[9]+e[3]*t[13],e[0]*t[2]+e[1]*t[6]+e[2]*t[10]+e[3]*t[14],e[0]*t[3]+e[1]*t[7]+e[2]*t[11]+e[3]*t[15],e[4]*t[0]+e[5]*t[4]+e[6]*t[8]+e[7]*t[12],e[4]*t[1]+e[5]*t[5]+e[6]*t[9]+e[7]*t[13],e[4]*t[2]+e[5]*t[6]+e[6]*t[10]+e[7]*t[14],e[4]*t[3]+e[5]*t[7]+e[6]*t[11]+e[7]*t[15],e[8]*t[0]+e[9]*t[4]+e[10]*t[8]+e[11]*t[12],e[8]*t[1]+e[9]*t[5]+e[10]*t[9]+e[11]*t[13],e[8]*t[2]+e[9]*t[6]+e[10]*t[10]+e[11]*t[14],e[8]*t[3]+e[9]*t[7]+e[10]*t[11]+e[11]*t[15],e[12]*t[0]+e[13]*t[4]+e[14]*t[8]+e[15]*t[12],e[12]*t[1]+e[13]*t[5]+e[14]*t[9]+e[15]*t[13],e[12]*t[2]+e[13]*t[6]+e[14]*t[10]+e[15]*t[14],e[12]*t[3]+e[13]*t[7]+e[14]*t[11]+e[15]*t[15]],he=e=>{const t=e[0]*e[5]-e[1]*e[4],n=e[0]*e[6]-e[2]*e[4],o=e[0]*e[7]-e[3]*e[4],r=e[1]*e[6]-e[2]*e[5],i=e[1]*e[7]-e[3]*e[5],s=e[2]*e[7]-e[3]*e[6],c=e[8]*e[13]-e[9]*e[12],f=e[8]*e[14]-e[10]*e[12],d=e[8]*e[15]-e[11]*e[12],m=e[9]*e[14]-e[10]*e[13],l=e[9]*e[15]-e[11]*e[13],u=e[10]*e[15]-e[11]*e[14];let a=t*u-n*l+o*m+r*d-i*f+s*c;return a?(a=1/a,[(e[5]*u-e[6]*l+e[7]*m)*a,(e[2]*l-e[1]*u-e[3]*m)*a,(e[13]*s-e[14]*i+e[15]*r)*a,(e[10]*i-e[9]*s-e[11]*r)*a,(e[6]*d-e[4]*u-e[7]*f)*a,(e[0]*u-e[2]*d+e[3]*f)*a,(e[14]*o-e[12]*s-e[15]*n)*a,(e[8]*s-e[10]*o+e[11]*n)*a,(e[4]*l-e[5]*d+e[7]*c)*a,(e[1]*d-e[0]*l-e[3]*c)*a,(e[12]*i-e[13]*o+e[15]*t)*a,(e[9]*o-e[8]*i-e[11]*t)*a,(e[5]*f-e[4]*m-e[6]*c)*a,(e[0]*m-e[1]*f+e[2]*c)*a,(e[13]*n-e[12]*r-e[14]*t)*a,(e[8]*r-e[9]*n+e[10]*t)*a]):ue()};const j=(e,t,n,o)=>{e[12]=t,e[13]=n,e[14]=o},W=(e,t)=>{const n=B(e),o=Math.sin(n),r=Math.cos(n);return[r,0,o,0,0,1,0,0,-o,0,r,0,0,0,0,1]};const be=(e,t,n)=>{const o=q(le(t,e)),r=q(X(n,o)),i=X(o,r),s=V(e,r),c=V(e,i),f=V(e,o);return[r[0],i[0],o[0],0,r[1],i[1],o[1],0,r[2],i[2],o[2],0,-s,-c,-f,1]},ye=(e,t,n,o)=>{const r=1/Math.tan(e),i=r/t,s=o/(o-n),c=-(s*n);return[i,0,0,0,0,r,0,0,0,0,s,1,0,0,c,0]};const pe=async(e,t)=>{e.adapter=await navigator.gpu.requestAdapter(),e.device=await e.adapter.requestDevice(),e.canvasFormat=navigator.gpu.getPreferredCanvasFormat(),e.canvas=k(),e.context=e.canvas.getContext("webgpu"),e.context.configure({device:e.device,format:e.canvasFormat,alphaMode:"opaque"});const n=e.device;if(e.buffer)for(let r=0;r<e.buffer.length;++r){const i=e.buffer[r],s=await Ce(t[i.embed]),c=n.createBuffer({size:s.length,usage:GPUBufferUsage.VERTEX|GPUBufferUsage.INDEX,mappedAtCreation:!0}),f=new DataView(c.getMappedRange());for(let d=0;d<s.length;++d)f.setUint8(d,s[d]);c.unmap(),e.buffer[r]=c}if(e.shader)for(let r=0;r<e.shader.length;++r){const i=e.shader[r],s=await De(t[i.embed]),c=n.createShaderModule({code:s});e.shader[r]=c}e.bindGroupLayout=[],e.pipelineLayout=[],e.pipeline=[],e.sampler=[],e.bindGroup=[],e.cbuffer=[],e.gbuffer=[];const o=(r,i,s)=>{e.cbuffer[r]=n.createBuffer({size:i,usage:s|GPUBufferUsage.COPY_DST})};o(0,512,GPUBufferUsage.UNIFORM),o(1,229376,GPUBufferUsage.STORAGE),o(2,65536,GPUBufferUsage.VERTEX),o(3,40960,GPUBufferUsage.INDIRECT),e.sampler[0]=n.createSampler({magFilter:"linear",minFilter:"linear",mipmapFilter:"linear"}),e.bindGroupLayout[0]=n.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.VERTEX,buffer:{}},{binding:1,visibility:GPUShaderStage.VERTEX|GPUShaderStage.FRAGMENT,buffer:{type:"read-only-storage"}}]}),e.bindGroupLayout[1]=n.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.FRAGMENT,buffer:{}},{binding:1,visibility:GPUShaderStage.FRAGMENT,texture:{sampleType:"depth"}},{binding:2,visibility:GPUShaderStage.FRAGMENT,texture:{}},{binding:3,visibility:GPUShaderStage.FRAGMENT,texture:{}},{binding:4,visibility:GPUShaderStage.FRAGMENT,texture:{}},{binding:5,visibility:GPUShaderStage.FRAGMENT,sampler:{}}]}),e.pipelineLayout[0]=n.createPipelineLayout({bindGroupLayouts:[e.bindGroupLayout[0]]}),e.pipelineLayout[1]=n.createPipelineLayout({bindGroupLayouts:[e.bindGroupLayout[1]]}),e.bindGroup[0]=n.createBindGroup({layout:e.bindGroupLayout[0],entries:[{binding:0,resource:{buffer:e.cbuffer[0]}},{binding:1,resource:{buffer:e.cbuffer[1]}}]}),_e(e)},Y=(e,t)=>{for(let n=0;n<e.id.length;++n)if(e.id[n].name===t)return n;return-1},ve=e=>{const t=e.device,n=e.canvas;if(n.width!==n.clientWidth||n.height!==n.clientHeight){n.width=n.clientWidth,n.height=n.clientHeight;const i=c=>{x(e.gbuffer[c])&&(e.gbuffer[c].destroy(),delete e.gbuffer[c])};i(0),i(1),i(2),i(3),i(4);const s=c=>{x(e.bindGroup[c])&&delete e.bindGroup[c]};s(1),s(2),s(3)}const o=(i,s)=>{x(e.gbuffer[i])||(e.gbuffer[i]=t.createTexture({size:[n.width,n.height],format:s,usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING}))};o(0,"depth32float"),o(1,"rgb10a2unorm"),o(2,"rgba8unorm"),o(3,"rgba8unorm"),o(4,"rgba16float");const r=(i,s,c,f,d)=>{x(e.bindGroup[i])||(e.bindGroup[i]=t.createBindGroup({layout:e.bindGroupLayout[1],entries:[{binding:0,resource:{buffer:e.cbuffer[0]}},{binding:1,resource:e.gbuffer[s].createView()},{binding:2,resource:e.gbuffer[c].createView()},{binding:3,resource:e.gbuffer[f].createView()},{binding:4,resource:e.gbuffer[d].createView()},{binding:5,resource:e.sampler[0]}]}))};r(1,0,1,2,3),r(2,0,1,1,1),r(3,0,4,4,4)},ge=e=>{const t=e.data.gpu,n=t.device,o=new Float32Array(68);{const r=R(e).camera,i=t.canvas.width/t.canvas.height,s=B(r.fov),[c,f,d,m,l]=M(r.offset,0,0,0,0,0),u=H(m,l),a=[c,f,d],h=de(a,u),w=be(a,h,[0,1,0]),P=ye(s,i,r.near,r.far),b=me(w,P),_=he(b);o.set(b,0),o.set(_,16),o.set(w,32),o.set(a,48)}{const r=R(e).light,[i,s,c,f,d]=M(r.offset,0,0,0,0,0),m=v(r.color,0,0,0,0),l=v(r.ambient0,0,0,0,0),u=v(r.ambient1,0,0,0,0),a=H(f,d);o.set(a,52),o.set(m,56),o.set(l,60),o.set(u,64)}n.queue.writeBuffer(t.cbuffer[0],0,o)},we=e=>{const t=e.data.gpu,n=t.device,o=[];o.length=t.mesh.length;for(let l=0;l<o.length;++l)o[l]=[];const r=new Float32Array(28),i=4*28;let s=0;for(const l of R(e).room){const u=Ie(e,l.name);if(u&&u.layout)for(const a of u.layout)for(let h=0;h<a.indices.length;++h){const G=ae(h,a.divisor),w=ce(h,a.divisor),[P,b,_,L,A]=M(l.offset,G*a.unit,0,w*a.unit,0,0),$=a.node[a.indices[h]];if($)for(const T of $.mesh){const S=u.mesh[T];if(!S)continue;const E=Y(t,S.name);if(E<0)continue;for(const re of t.id[E].mesh)o[re].push(s);const[O,C,D,z,ee]=M(S.offset,P,b,_,L,A),N=W(z,ee);j(N,O,C,D);const te=v(S.factor0,1,1,1,1),ne=v(S.factor1,1,1,1,0),oe=v(S.factor2,0,0,0,0);r.set(N,0),r.set(te,16),r.set(ne,20),r.set(oe,24),n.queue.writeBuffer(t.cbuffer[1],s*i,r),s+=1}}}for(const l of R(e).mob){const u=Ne(e,l.name);if(!u)continue;const[a,h,G,w,P]=M(l.offset,0,0,0,0,0);for(const b of u.mesh){const _=Y(t,b.name);if(_<0)continue;for(const z of t.id[_].mesh)o[z].push(s);const[L,A,$,T,S]=M(b.offset,a,h,G,w,P),E=W(T,S);j(E,L,A,$);const O=v(b.factor0,1,1,1,1),C=v(b.factor1,1,1,1,0),D=v(b.factor2,0,0,0,0);r.set(E,0),r.set(O,16),r.set(C,20),r.set(D,24),n.queue.writeBuffer(t.cbuffer[1],s*i,r),s+=1}}const c=[];let f=0,d=0;const m=new Uint32Array(5);for(let l=0;l<o.length;++l){if(o[l].length<=0)continue;const u=t.mesh[l],a=o[l].length;n.queue.writeBuffer(t.cbuffer[2],f*4,new Uint32Array(o[l])),m[0]=u.count,m[1]=a,m[2]=0,m[3]=0,m[4]=0,n.queue.writeBuffer(t.cbuffer[3],d,m),c.push({id:l,first:f,offset:d}),f+=a,d+=20}return c},_e=e=>{const t=e.device;e.pipeline[0]=t.createRenderPipeline({layout:e.pipelineLayout[0],vertex:{module:e.shader[0],entryPoint:"VS",buffers:[{arrayStride:4,attributes:[{format:"uint32",offset:0,shaderLocation:0}],stepMode:"instance"},{arrayStride:12,attributes:[{format:"float32x3",offset:0,shaderLocation:1}]},{arrayStride:12,attributes:[{format:"float32x3",offset:0,shaderLocation:2}]}]},fragment:{module:e.shader[0],entryPoint:"FS",targets:[{format:"rgb10a2unorm"},{format:"rgba8unorm"},{format:"rgba8unorm"},{format:"rgba16float"}]},depthStencil:{depthWriteEnabled:!0,depthCompare:"less",format:"depth32float"},primitive:{cullMode:"back",frontFace:"cw"}}),e.pipeline[1]=t.createRenderPipeline({layout:e.pipelineLayout[1],vertex:{module:e.shader[1],entryPoint:"VS",buffers:[]},fragment:{module:e.shader[1],entryPoint:"FS_SSAO",targets:[{format:"rgba8unorm",blend:{color:{operation:"min",srcFactor:"one",dstFactor:"one"},alpha:{}},writeMask:GPUColorWrite.RED}]}}),e.pipeline[2]=t.createRenderPipeline({layout:e.pipelineLayout[1],vertex:{module:e.shader[1],entryPoint:"VS",buffers:[]},fragment:{module:e.shader[1],entryPoint:"FS_HDR",targets:[{format:"rgba16float",blend:{color:{operation:"add",srcFactor:"one",dstFactor:"one"},alpha:{}}}]},depthStencil:{depthWriteEnabled:!1,depthCompare:"not-equal",format:"depth32float"}}),e.pipeline[3]=t.createRenderPipeline({layout:e.pipelineLayout[1],vertex:{module:e.shader[1],entryPoint:"VS",buffers:[]},fragment:{module:e.shader[1],entryPoint:"FS_HDRSky",targets:[{format:"rgba16float",blend:{color:{operation:"add",srcFactor:"one",dstFactor:"one"},alpha:{}}}]},depthStencil:{depthWriteEnabled:!1,depthCompare:"equal",format:"depth32float"}}),e.pipeline[4]=t.createRenderPipeline({layout:e.pipelineLayout[1],vertex:{module:e.shader[1],entryPoint:"VS",buffers:[]},fragment:{module:e.shader[1],entryPoint:"FS_HDR2LDR",targets:[{format:e.canvasFormat}]},depthStencil:{depthWriteEnabled:!1,depthCompare:"always",format:"depth32float"}}),e.pipeline[5]=t.createRenderPipeline({layout:e.pipelineLayout[0],vertex:{module:e.shader[2],entryPoint:"VS",buffers:[{arrayStride:12,attributes:[{format:"float32x3",offset:0,shaderLocation:0}]},{arrayStride:4,attributes:[{format:"unorm8x4",offset:0,shaderLocation:1}]}]},fragment:{module:e.shader[2],entryPoint:"FS",targets:[{format:e.canvasFormat}]},depthStencil:{depthWriteEnabled:!1,depthCompare:"less",format:"depth32float"},primitive:{topology:"line-list"}})},Se=e=>{const t=e.data.gpu;ve(t)},xe=e=>{ge(e);const t=we(e),n=e.data.gpu,o=n.device,r=o.createCommandEncoder();Ge(r,n,t),Pe(r,n),Me(r,n),Be(r,n),o.queue.submit([r.finish()])},Ge=(e,t,n)=>{const o=e.beginRenderPass({depthStencilAttachment:{view:t.gbuffer[0].createView(),depthClearValue:1,depthLoadOp:"clear",depthStoreOp:"store"},colorAttachments:[{view:t.gbuffer[1].createView(),clearValue:{r:0,g:0,b:0,a:0},loadOp:"clear",storeOp:"store"},{view:t.gbuffer[2].createView(),clearValue:{r:0,g:0,b:0,a:0},loadOp:"clear",storeOp:"store"},{view:t.gbuffer[3].createView(),clearValue:{r:1,g:0,b:0,a:0},loadOp:"clear",storeOp:"store"},{view:t.gbuffer[4].createView(),clearValue:{r:0,g:0,b:0,a:0},loadOp:"clear",storeOp:"store"}]});for(const r of n){o.setPipeline(t.pipeline[0]),o.setBindGroup(0,t.bindGroup[0]),o.setVertexBuffer(0,t.cbuffer[2],r.first*4);const i=t.mesh[r.id];if(i.vb0){const[s,c,f]=i.vb0;o.setVertexBuffer(1,t.buffer[s],c,f)}if(i.vb1){const[s,c,f]=i.vb1;o.setVertexBuffer(2,t.buffer[s],c,f)}if(i.ib){const[s,c,f]=i.ib;o.setIndexBuffer(t.buffer[s],"uint16",c,f)}o.drawIndexedIndirect(t.cbuffer[3],r.offset)}o.end()},Pe=(e,t)=>{const n=e.beginRenderPass({colorAttachments:[{view:t.gbuffer[3].createView(),loadOp:"load",storeOp:"store"}]});n.setPipeline(t.pipeline[1]),n.setBindGroup(0,t.bindGroup[2]),n.draw(4),n.end()},Me=(e,t)=>{const n=e.beginRenderPass({depthStencilAttachment:{view:t.gbuffer[0].createView(),depthReadOnly:!0},colorAttachments:[{view:t.gbuffer[4].createView(),loadOp:"load",storeOp:"store"}]});n.setPipeline(t.pipeline[2]),n.setBindGroup(0,t.bindGroup[1]),n.draw(4),n.setPipeline(t.pipeline[3]),n.draw(4),n.end()},Be=(e,t)=>{const n=e.beginRenderPass({depthStencilAttachment:{view:t.gbuffer[0].createView(),depthReadOnly:!0},colorAttachments:[{view:t.context.getCurrentTexture().createView(),clearValue:{r:0,g:0,b:0,a:0},loadOp:"clear",storeOp:"store"}]});n.setPipeline(t.pipeline[4]),n.setBindGroup(0,t.bindGroup[3]),n.draw(4),n.end()},Q=(e,t)=>{e[t]||(e[t]={})},g=(e,t,n)=>{Q(e,t),n=n||0;const o=e[t];o&&!o.hold&&(o.value=Math.max(0,n))},U=(e,t,n,o)=>{Q(e,t),n=n||0,o=o||!1;const r=e[t];r&&(r.value=Math.max(0,n),r.hold=o)},Re=(e,t)=>{const n=e[t];n&&(n.history=n.value)},Ee=(e,t)=>{const n=e[t];return n&&n.value||0},$e=(e,t)=>{const n=e[t];return n?(n.value||0)-(n.history||0):0},Fe=e=>{if(!e)return!1;for(const t of e.buttons)if(t.value>.5)return!0;for(const t of e.axes)if(Math.abs(t)>.5)return!0;return!1},Ue=e=>{const t=e.hid,n=e.data.hid,o=()=>{for(const s in n.keyboard)U(t.map,n.keyboard[s],0,!1);for(const s of n.mouse.button)U(t.map,s,0,!1)},r=(s,c,f)=>{if(!F())return;const d=n.keyboard[s.code];d&&(U(t.map,d,c,f),s.preventDefault(),t.last=-1)},i=(s,c,f)=>{if(!F())return;const d=n.mouse.button[s.button];d&&(U(t.map,d,c,f),s.preventDefault(),t.last=-1)};p(document.body,"contextmenu",s=>{s.preventDefault()}),p(window,"blur",s=>{o()}),p(document,"click",s=>{F()||(se(),o())}),p(document,"keydown",s=>{r(s,1,!0)}),p(document,"keyup",s=>{r(s,0,!1)}),p(document,"mousedown",s=>{i(s,1,!0)}),p(document,"mouseup",s=>{i(s,0,!1)}),p(document,"mousemove",s=>{if(!F())return;const c=.25,f=n.mouse.movementX;f&&(g(t.map,f[0],-s.movementX*c),g(t.map,f[1],s.movementX*c));const d=n.mouse.movementY;d&&(g(t.map,d[0],-s.movementY*c),g(t.map,d[1],s.movementY*c)),s.preventDefault(),t.last=-1})},Ve=(e,t)=>{const n=e.hid,o=e.data.hid;g(n.map,o.timer,t/1e3);{const r=navigator.getGamepads();for(let s=0;s<r.length;++s)if(Fe(r[s])){n.last=s;break}const i=r[n.last];if(i){const s=o.gamepad;for(let c=0;c<i.buttons.length;++c){const f=s.buttons[c];f&&g(n.map,f,i.buttons[c].value)}for(let c=0;c<i.axes.length;++c){const f=s.axes[c];if(!f)continue;const d=Math.trunc(i.axes[c]*4)/4;g(n.map,f[0],-d),g(n.map,f[1],d)}}}},Le=e=>{const t=e.hid;for(const n in t.map)Re(t.map,n),g(t.map,n,0)},I={},Ae=e=>{const t=R(e);if(!t)return;const n=Z(e,t.name);if(!n)return;const o=n.step||[],r=s=>{for(let c=0;c<o.length;++c)if(o[c].label&&o[c].label===s)return c;return-1};let i=!1;for(;!i;){const s=o[t.step];if(s){if(s.event){const c=I[s.event];c&&c(e)}s.goto?t.step=r(s.goto):t.step+=1,s.yield&&(i=!0)}else t.step=-1,i=!0}t.step<0&&e.stage.pop()},Te=(e,t)=>{const n=Z(e,t);if(!n)return;const o={name:t,step:0,room:structuredClone(n.room)||[],mob:structuredClone(n.mob)||[],camera:structuredClone(n.camera[0]),light:structuredClone(n.light[0])};e.stage.push(o)},M=(e,t,n,o,r,i)=>(e&&(t+=e.x||0,n+=e.y||0,o+=e.z||0,r+=e.ha||0,i+=e.va||0),[t,n,o,r,i]),v=(e,t,n,o,r)=>(e&&(x(e.r)&&(t=e.r),x(e.g)&&(n=e.g),x(e.r)&&(o=e.b),x(e.a)&&(r=e.a)),[t,n,o,r]),Oe=e=>{e.data.loading+=1,(async()=>{const o=await(await fetch("app.json")).json(),r=e.data;Object.assign(r,o),Ue(e),r.gpu&&await pe(r.gpu,r.embed),Te(e,"main"),delete r.embed,r.loading-=1})()},Ce=async e=>{const t=window.atob(e),n=new Uint8Array(t.length);for(let i=0;i<t.length;++i)n[i]=t.charCodeAt(i);const o=new Blob([n]).stream().pipeThrough(new DecompressionStream("deflate-raw")),r=await new Response(o).arrayBuffer();return new Uint8Array(r)},De=async e=>{const t=window.atob(e),n=new Uint8Array(t.length);for(let i=0;i<t.length;++i)n[i]=t.charCodeAt(i);const o=new Blob([n]).stream().pipeThrough(new DecompressionStream("deflate-raw"));return await new Response(o).text()},ze=async()=>{if(!navigator.gpu){K("ERROR: WebGPU not supported.");return}const e={data:{loading:0},hid:{map:{},last:0},stage:[]};Oe(e);const t=n=>{ke(e)&&(Ve(e,n),Se(e),Ae(e),xe(e),Le(e)),requestAnimationFrame(t)};requestAnimationFrame(t)},ke=e=>e.data.loading<=0;const Ie=(e,t)=>e.data.room[t],Ne=(e,t)=>e.data.mob[t],Z=(e,t)=>e.data.stage[t],y=(e,t)=>Ee(e.hid.map,t),qe=(e,t)=>$e(e.hid.map,t),R=e=>e.stage.at(-1);I.setup=e=>{ie()};I.update=e=>{const t=qe(e,"t"),n=R(e),o=n.mob.find(i=>i.name==="p000");if(o){const i=[0,0];i[0]+=-y(e,"l0"),i[0]+=y(e,"l1"),i[1]+=y(e,"l2"),i[1]+=-y(e,"l3");const s=[0,0];s[0]+=-y(e,"r0"),s[0]+=y(e,"r1"),s[1]+=y(e,"r2"),s[1]+=-y(e,"r3");const c=y(e,"b1");if(s){const u=-s[0],a=s[1];o.offset.ha+=90*t*u,o.offset.va+=90*t*a,o.offset.va=Math.max(-60,Math.min(o.offset.va,80))}if(i){const l=c?4:2,u=B(o.offset.ha+90),a=B(o.offset.ha),h=-i[0],G=i[1],w=h*Math.cos(u)+G*Math.cos(a),P=h*Math.sin(u)+G*Math.sin(a),b=l*t*w,_=l*t*P;o.offset.x+=b,o.offset.z+=_}y(e,"a2")&&(o.offset.y-=.75*t),y(e,"a3")&&(o.offset.y+=.75*t);const m=n.camera;m.offset.x=o.offset.x,m.offset.y=o.offset.y,m.offset.z=o.offset.z,m.offset.ha=o.offset.ha,m.offset.va=o.offset.va}const r=n.light;r.offset.ha+=45*t};p(window,"load",()=>{K("Welcome Basilico."),ze()});})();
