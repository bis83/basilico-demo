(()=>{const y=(e,t,n)=>{e.addEventListener(t,n)},F=()=>document.getElementById("canvas"),O=()=>document.getElementById("message"),Q=()=>{F().requestPointerLock()},P=()=>document.pointerLockElement===F(),C=e=>{const t=O();t.style.display="",t.textContent=e},Z=()=>{const e=O();e.style.display="none"};const ee=(e,t)=>Math.floor(e/t),te=(e,t)=>(e%t+t)%t,S=e=>e/180*Math.PI;const R=(e,t)=>e[0]*t[0]+e[1]*t[1]+e[2]*t[2],ne=e=>{const t=R(e,e);return Math.sqrt(t)},oe=(e,t)=>[e[0]+t[0],e[1]+t[1],e[2]+t[2]],re=(e,t)=>[e[0]-t[0],e[1]-t[1],e[2]-t[2]];const A=e=>{const t=ne(e);return[e[0]/t,e[1]/t,e[2]/t]},T=(e,t)=>[e[1]*t[2]-e[2]*t[1],e[2]*t[0]-e[0]*t[2],e[0]*t[1]-e[1]*t[0]],$=(e,t)=>{const n=S(e),r=S(t);return[Math.cos(r)*Math.cos(n),Math.sin(r),Math.cos(r)*Math.sin(n)]},se=()=>[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],ie=(e,t)=>[e[0]*t[0]+e[1]*t[4]+e[2]*t[8]+e[3]*t[12],e[0]*t[1]+e[1]*t[5]+e[2]*t[9]+e[3]*t[13],e[0]*t[2]+e[1]*t[6]+e[2]*t[10]+e[3]*t[14],e[0]*t[3]+e[1]*t[7]+e[2]*t[11]+e[3]*t[15],e[4]*t[0]+e[5]*t[4]+e[6]*t[8]+e[7]*t[12],e[4]*t[1]+e[5]*t[5]+e[6]*t[9]+e[7]*t[13],e[4]*t[2]+e[5]*t[6]+e[6]*t[10]+e[7]*t[14],e[4]*t[3]+e[5]*t[7]+e[6]*t[11]+e[7]*t[15],e[8]*t[0]+e[9]*t[4]+e[10]*t[8]+e[11]*t[12],e[8]*t[1]+e[9]*t[5]+e[10]*t[9]+e[11]*t[13],e[8]*t[2]+e[9]*t[6]+e[10]*t[10]+e[11]*t[14],e[8]*t[3]+e[9]*t[7]+e[10]*t[11]+e[11]*t[15],e[12]*t[0]+e[13]*t[4]+e[14]*t[8]+e[15]*t[12],e[12]*t[1]+e[13]*t[5]+e[14]*t[9]+e[15]*t[13],e[12]*t[2]+e[13]*t[6]+e[14]*t[10]+e[15]*t[14],e[12]*t[3]+e[13]*t[7]+e[14]*t[11]+e[15]*t[15]],ce=e=>{const t=e[0]*e[5]-e[1]*e[4],n=e[0]*e[6]-e[2]*e[4],r=e[0]*e[7]-e[3]*e[4],o=e[1]*e[6]-e[2]*e[5],s=e[1]*e[7]-e[3]*e[5],i=e[2]*e[7]-e[3]*e[6],c=e[8]*e[13]-e[9]*e[12],l=e[8]*e[14]-e[10]*e[12],f=e[8]*e[15]-e[11]*e[12],m=e[9]*e[14]-e[10]*e[13],u=e[9]*e[15]-e[11]*e[13],d=e[10]*e[15]-e[11]*e[14];let a=t*d-n*u+r*m+o*f-s*l+i*c;return a?(a=1/a,[(e[5]*d-e[6]*u+e[7]*m)*a,(e[2]*u-e[1]*d-e[3]*m)*a,(e[13]*i-e[14]*s+e[15]*o)*a,(e[10]*s-e[9]*i-e[11]*o)*a,(e[6]*f-e[4]*d-e[7]*l)*a,(e[0]*d-e[2]*f+e[3]*l)*a,(e[14]*r-e[12]*i-e[15]*n)*a,(e[8]*i-e[10]*r+e[11]*n)*a,(e[4]*u-e[5]*f+e[7]*c)*a,(e[1]*f-e[0]*u-e[3]*c)*a,(e[12]*s-e[13]*r+e[15]*t)*a,(e[9]*r-e[8]*s-e[11]*t)*a,(e[5]*l-e[4]*m-e[6]*c)*a,(e[0]*m-e[1]*l+e[2]*c)*a,(e[13]*n-e[12]*o-e[14]*t)*a,(e[8]*o-e[9]*n+e[10]*t)*a]):se()};const ae=(e,t,n,r)=>{e[12]=t,e[13]=n,e[14]=r},de=(e,t)=>{const n=S(e),r=Math.sin(n),o=Math.cos(n);return[o,0,r,0,0,1,0,0,-r,0,o,0,0,0,0,1]};const le=(e,t,n)=>{const r=A(re(t,e)),o=A(T(n,r)),s=T(r,o),i=R(e,o),c=R(e,s),l=R(e,r);return[o[0],s[0],r[0],0,o[1],s[1],r[1],0,o[2],s[2],r[2],0,-i,-c,-l,1]},fe=(e,t,n,r)=>{const o=1/Math.tan(e),s=o/t,i=r/(r-n),c=-(i*n);return[s,0,0,0,0,o,0,0,0,0,i,1,0,0,c,0]};const ue=async(e,t)=>{e.adapter=await navigator.gpu.requestAdapter(),e.device=await e.adapter.requestDevice(),e.canvasFormat=navigator.gpu.getPreferredCanvasFormat(),e.canvas=F(),e.context=e.canvas.getContext("webgpu"),e.context.configure({device:e.device,format:e.canvasFormat,alphaMode:"opaque"});const n=e.device;if(e.buffer)for(let o=0;o<e.buffer.length;++o){const s=e.buffer[o],i=await Ve(t[s.embed]),c=n.createBuffer({size:i.length,usage:GPUBufferUsage.VERTEX|GPUBufferUsage.INDEX,mappedAtCreation:!0}),l=new DataView(c.getMappedRange());for(let f=0;f<i.length;++f)l.setUint8(f,i[f]);c.unmap(),e.buffer[o]=c}if(e.shader)for(let o=0;o<e.shader.length;++o){const s=e.shader[o],i=await Fe(t[s.embed]),c=n.createShaderModule({code:i});e.shader[o]=c}e.bindGroupLayout=[],e.pipelineLayout=[],e.pipeline=[],e.sampler=[],e.bindGroup=[],e.cbuffer=[],e.gbuffer=[];const r=(o,s,i)=>{e.cbuffer[o]=n.createBuffer({size:s,usage:i|GPUBufferUsage.COPY_DST})};r(0,512,GPUBufferUsage.UNIFORM),r(1,229376,GPUBufferUsage.STORAGE),r(2,65536,GPUBufferUsage.VERTEX),r(3,40960,GPUBufferUsage.INDIRECT),r(4,49152,GPUBufferUsage.VERTEX),r(5,16384,GPUBufferUsage.VERTEX),e.sampler[0]=n.createSampler({magFilter:"linear",minFilter:"linear",mipmapFilter:"linear"}),e.bindGroupLayout[0]=n.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.VERTEX,buffer:{}},{binding:1,visibility:GPUShaderStage.VERTEX|GPUShaderStage.FRAGMENT,buffer:{type:"read-only-storage"}}]}),e.bindGroupLayout[1]=n.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.FRAGMENT,buffer:{}},{binding:1,visibility:GPUShaderStage.FRAGMENT,texture:{sampleType:"depth"}},{binding:2,visibility:GPUShaderStage.FRAGMENT,texture:{}},{binding:3,visibility:GPUShaderStage.FRAGMENT,texture:{}},{binding:4,visibility:GPUShaderStage.FRAGMENT,texture:{}},{binding:5,visibility:GPUShaderStage.FRAGMENT,sampler:{}}]}),e.pipelineLayout[0]=n.createPipelineLayout({bindGroupLayouts:[e.bindGroupLayout[0]]}),e.pipelineLayout[1]=n.createPipelineLayout({bindGroupLayouts:[e.bindGroupLayout[1]]}),e.bindGroup[0]=n.createBindGroup({layout:e.bindGroupLayout[0],entries:[{binding:0,resource:{buffer:e.cbuffer[0]}},{binding:1,resource:{buffer:e.cbuffer[1]}}]}),ve(e)},me=(e,t)=>{for(let n=0;n<e.id.length;++n)if(e.id[n].name===t)return n;return-1},he=(e,t)=>{const n=e.device,r=new Float32Array(68);{const o=t.camera,s=e.canvas.width/e.canvas.height,i=S(o.fov),[c,l,f,m,u]=U(o.offset,0,0,0,0,0),d=$(m,u),a=[c,l,f],h=oe(a,d),p=le(a,h,[0,1,0]),x=fe(i,s,o.near,o.far),B=ie(p,x),E=ce(B);r.set(B,0),r.set(E,16),r.set(p,32),r.set(a,48)}{const o=t.light,[s,i,c,l,f]=U(o.offset,0,0,0,0,0),m=_(o.color,0,0,0,0),u=_(o.ambient0,0,0,0,0),d=_(o.ambient1,0,0,0,0),a=$(l,f);r.set(a,52),r.set(m,56),r.set(u,60),r.set(d,64)}n.queue.writeBuffer(e.cbuffer[0],0,r)},be=(e,t)=>{const n=e.device;if(!t.lines||t.lines.length<=0)return 0;const r=new Float32Array(t.lines.length*3),o=new Uint8Array(t.lines.length*4);for(let s=0;s<t.lines.length;++s){const i=t.lines[s];r[s*3+0]=i.pos[0],r[s*3+1]=i.pos[1],r[s*3+2]=i.pos[2],o[s*4+0]=i.color[0],o[s*4+1]=i.color[1],o[s*4+2]=i.color[2],o[s*4+3]=i.color[3]}return n.queue.writeBuffer(e.cbuffer[4],0,r),n.queue.writeBuffer(e.cbuffer[5],0,o),t.lines.length},ye=(e,t,n)=>{const r=e.device,o=[];o.length=e.mesh.length;for(let d=0;d<o.length;++d)o[d]=[];const s=new Float32Array(28),i=4*28;let c=0;for(const d of t.room){const a=Te(n,d.name);if(a)for(let h=0;h<a.indices.length;++h){const G=a.node[a.indices[h]];if(!G)continue;const p=te(h,a.divisor),x=ee(h,a.divisor),[B,E,I,k,D]=U(d.offset,p*a.unit,0,x*a.unit,0,0);for(const z of G.mesh){const w=a.mesh[z];if(!w)continue;const M=me(e,w.name);if(M<0)continue;for(const K of e.id[M].mesh)o[K].push(c);const[q,N,X,H,W]=U(w.offset,B,E,I,k,D),L=de(H,W);ae(L,q,N,X);const j=_(w.factor0,1,1,1,1),Y=_(w.factor1,1,1,1,0),J=_(w.factor2,0,0,0,0);s.set(L,0),s.set(j,16),s.set(Y,20),s.set(J,24),r.queue.writeBuffer(e.cbuffer[1],c*i,s),c+=1}}}const l=[];let f=0,m=0;const u=new Uint32Array(5);for(let d=0;d<o.length;++d){if(o[d].length<=0)continue;const a=e.mesh[d],h=o[d].length;r.queue.writeBuffer(e.cbuffer[2],f*4,new Uint32Array(o[d])),u[0]=a.count,u[1]=h,u[2]=0,u[3]=0,u[4]=0,r.queue.writeBuffer(e.cbuffer[3],m,u),l.push({id:d,first:f,offset:m}),f+=h,m+=20}return l},ge=e=>{const t=e.device,n=e.canvas;if(n.width!==n.clientWidth||n.height!==n.clientHeight){n.width=n.clientWidth,n.height=n.clientHeight;const s=c=>{e.gbuffer[c]!==void 0&&(e.gbuffer[c].destroy(),delete e.gbuffer[c])};s(0),s(1),s(2),s(3),s(4);const i=c=>{e.bindGroup[c]!==void 0&&delete e.bindGroup[c]};i(1),i(2),i(3)}const r=(s,i)=>{e.gbuffer[s]===void 0&&(e.gbuffer[s]=t.createTexture({size:[n.width,n.height],format:i,usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING}))};r(0,"depth32float"),r(1,"rgb10a2unorm"),r(2,"rgba8unorm"),r(3,"rgba8unorm"),r(4,"rgba16float");const o=(s,i,c,l,f)=>{e.bindGroup[s]===void 0&&(e.bindGroup[s]=t.createBindGroup({layout:e.bindGroupLayout[1],entries:[{binding:0,resource:{buffer:e.cbuffer[0]}},{binding:1,resource:e.gbuffer[i].createView()},{binding:2,resource:e.gbuffer[c].createView()},{binding:3,resource:e.gbuffer[l].createView()},{binding:4,resource:e.gbuffer[f].createView()},{binding:5,resource:e.sampler[0]}]}))};o(1,0,1,2,3),o(2,0,1,1,1),o(3,0,4,4,4)},ve=e=>{const t=e.device;e.pipeline[0]=t.createRenderPipeline({layout:e.pipelineLayout[0],vertex:{module:e.shader[0],entryPoint:"VS",buffers:[{arrayStride:4,attributes:[{format:"uint32",offset:0,shaderLocation:0}],stepMode:"instance"},{arrayStride:12,attributes:[{format:"float32x3",offset:0,shaderLocation:1}]},{arrayStride:12,attributes:[{format:"float32x3",offset:0,shaderLocation:2}]}]},fragment:{module:e.shader[0],entryPoint:"FS",targets:[{format:"rgb10a2unorm"},{format:"rgba8unorm"},{format:"rgba8unorm"},{format:"rgba16float"}]},depthStencil:{depthWriteEnabled:!0,depthCompare:"less",format:"depth32float"},primitive:{cullMode:"back",frontFace:"cw"}}),e.pipeline[1]=t.createRenderPipeline({layout:e.pipelineLayout[1],vertex:{module:e.shader[1],entryPoint:"VS",buffers:[]},fragment:{module:e.shader[1],entryPoint:"FS_SSAO",targets:[{format:"rgba8unorm",blend:{color:{operation:"min",srcFactor:"one",dstFactor:"one"},alpha:{}},writeMask:GPUColorWrite.RED}]}}),e.pipeline[2]=t.createRenderPipeline({layout:e.pipelineLayout[1],vertex:{module:e.shader[1],entryPoint:"VS",buffers:[]},fragment:{module:e.shader[1],entryPoint:"FS_HDR",targets:[{format:"rgba16float",blend:{color:{operation:"add",srcFactor:"one",dstFactor:"one"},alpha:{}}}]},depthStencil:{depthWriteEnabled:!1,depthCompare:"not-equal",format:"depth32float"}}),e.pipeline[3]=t.createRenderPipeline({layout:e.pipelineLayout[1],vertex:{module:e.shader[1],entryPoint:"VS",buffers:[]},fragment:{module:e.shader[1],entryPoint:"FS_HDRSky",targets:[{format:"rgba16float",blend:{color:{operation:"add",srcFactor:"one",dstFactor:"one"},alpha:{}}}]},depthStencil:{depthWriteEnabled:!1,depthCompare:"equal",format:"depth32float"}}),e.pipeline[4]=t.createRenderPipeline({layout:e.pipelineLayout[1],vertex:{module:e.shader[1],entryPoint:"VS",buffers:[]},fragment:{module:e.shader[1],entryPoint:"FS_HDR2LDR",targets:[{format:e.canvasFormat}]},depthStencil:{depthWriteEnabled:!1,depthCompare:"always",format:"depth32float"}}),e.pipeline[5]=t.createRenderPipeline({layout:e.pipelineLayout[0],vertex:{module:e.shader[2],entryPoint:"VS",buffers:[{arrayStride:12,attributes:[{format:"float32x3",offset:0,shaderLocation:0}]},{arrayStride:4,attributes:[{format:"unorm8x4",offset:0,shaderLocation:1}]}]},fragment:{module:e.shader[2],entryPoint:"FS",targets:[{format:e.canvasFormat}]},depthStencil:{depthWriteEnabled:!1,depthCompare:"less",format:"depth32float"},primitive:{topology:"line-list"}})},pe=e=>{ge(e)},we=(e,t,n)=>{he(e,t);const r=ye(e,t,n),o=be(e,t),s=e.device,i=s.createCommandEncoder();_e(i,e,r),Se(i,e),Ge(i,e),xe(i,e,o),s.queue.submit([i.finish()])},_e=(e,t,n)=>{const r=e.beginRenderPass({depthStencilAttachment:{view:t.gbuffer[0].createView(),depthClearValue:1,depthLoadOp:"clear",depthStoreOp:"store"},colorAttachments:[{view:t.gbuffer[1].createView(),clearValue:{r:0,g:0,b:0,a:0},loadOp:"clear",storeOp:"store"},{view:t.gbuffer[2].createView(),clearValue:{r:0,g:0,b:0,a:0},loadOp:"clear",storeOp:"store"},{view:t.gbuffer[3].createView(),clearValue:{r:1,g:0,b:0,a:0},loadOp:"clear",storeOp:"store"},{view:t.gbuffer[4].createView(),clearValue:{r:0,g:0,b:0,a:0},loadOp:"clear",storeOp:"store"}]});for(const o of n){r.setPipeline(t.pipeline[0]),r.setBindGroup(0,t.bindGroup[0]),r.setVertexBuffer(0,t.cbuffer[2],o.first*4);const s=t.mesh[o.id];if(s.vb0){const[i,c,l]=s.vb0;r.setVertexBuffer(1,t.buffer[i],c,l)}if(s.vb1){const[i,c,l]=s.vb1;r.setVertexBuffer(2,t.buffer[i],c,l)}if(s.ib){const[i,c,l]=s.ib;r.setIndexBuffer(t.buffer[i],"uint16",c,l)}r.drawIndexedIndirect(t.cbuffer[3],o.offset)}r.end()},Se=(e,t)=>{const n=e.beginRenderPass({colorAttachments:[{view:t.gbuffer[3].createView(),loadOp:"load",storeOp:"store"}]});n.setPipeline(t.pipeline[1]),n.setBindGroup(0,t.bindGroup[2]),n.draw(4),n.end()},Ge=(e,t)=>{const n=e.beginRenderPass({depthStencilAttachment:{view:t.gbuffer[0].createView(),depthReadOnly:!0},colorAttachments:[{view:t.gbuffer[4].createView(),loadOp:"load",storeOp:"store"}]});n.setPipeline(t.pipeline[2]),n.setBindGroup(0,t.bindGroup[1]),n.draw(4),n.setPipeline(t.pipeline[3]),n.draw(4),n.end()},xe=(e,t,n)=>{const r=e.beginRenderPass({depthStencilAttachment:{view:t.gbuffer[0].createView(),depthReadOnly:!0},colorAttachments:[{view:t.context.getCurrentTexture().createView(),clearValue:{r:0,g:0,b:0,a:0},loadOp:"clear",storeOp:"store"}]});r.setPipeline(t.pipeline[4]),r.setBindGroup(0,t.bindGroup[3]),r.draw(4),n&&(r.setPipeline(t.pipeline[5]),r.setBindGroup(0,t.bindGroup[0]),r.setVertexBuffer(0,t.cbuffer[4]),r.setVertexBuffer(1,t.cbuffer[5]),r.draw(n)),r.end()},v=(e,t,n)=>{n=n||0;const r=e[t];r&&!r.hold&&(r.value=Math.max(0,n))},g=(e,t,n,r)=>{n=n||0,r=r||!1;const o=e[t];o&&(o.value=Math.max(0,n),o.hold=r)},V=(e,t)=>{const n=e[t];return n?n.value:0},Pe=e=>{g(e.signal,e.timer.time,performance.now(),!0),y(document.body,"contextmenu",o=>{o.preventDefault()}),y(window,"gamepadconnected",o=>{const s=e.gamepad;s.id=o.gamepad.index}),y(window,"gamepaddisconnected",o=>{const s=e.gamepad;s.id===o.gamepad.index&&(s.id=null)});const t=()=>{for(const o in e.keyboard)g(e.signal,e.keyboard[o],0,!1);for(const o of e.mouse.button)g(e.signal,o,0,!1)},n=(o,s,i)=>{if(!P())return;const c=e.keyboard[o.code];c&&(g(e.signal,c,s,i),o.preventDefault())},r=(o,s,i)=>{if(!P())return;const c=e.mouse.button[o.button];c&&(g(e.signal,c,s,i),o.preventDefault())};y(document,"click",o=>{P()||(Q(),t())}),y(document,"keydown",o=>{n(o,1,!0)}),y(document,"keyup",o=>{n(o,0,!1)}),y(document,"mousedown",o=>{r(o,1,!0)}),y(document,"mouseup",o=>{r(o,0,!1)}),y(document,"mousemove",o=>{if(!P())return;const s=.25,i=e.mouse.movementX;i&&(v(e.signal,i[0],-o.movementX*s),v(e.signal,i[1],o.movementX*s));const c=e.mouse.movementY;c&&(v(e.signal,c[0],-o.movementY*s),v(e.signal,c[1],o.movementY*s)),o.preventDefault()}),y(window,"blur",o=>{t()})},Be=(e,t)=>{{const n=e.timer,r=V(e.signal,n.time),o=V(e.signal,n.frameCount),s=(t-r)/1e3;g(e.signal,n.time,t,!0),g(e.signal,n.deltaTime,s,!0),g(e.signal,n.frameCount,o+1,!0)}if(!P()){const n=e.gamepad;if(n.id!==null){const r=navigator.getGamepads()[n.id];for(let o=0;o<r.buttons.length;++o){const s=n.buttons[o];s&&v(e.signal,s,r.buttons[o].value)}for(let o=0;o<r.axes.length;++o){const s=n.axes[o];if(!s)continue;const i=Math.trunc(r.axes[o]*4)/4;v(e.signal,s[0],-i),v(e.signal,s[1],i)}}}},Re=e=>{for(const t in e.signal)v(e.signal,t,0)},b=(e,t)=>V(e.func.signal,t),Ue=(e,t)=>{e.lines=[];for(const n of t)e.lines.push({pos:n.from,color:n.color}),e.lines.push({pos:n.to,color:n.color})},U=(e,t,n,r,o,s)=>(e&&(t+=e.x||0,n+=e.y||0,r+=e.z||0,o+=e.ha||0,s+=e.va||0),[t,n,r,o,s]),_=(e,t,n,r,o)=>(e&&(e.r!==void 0&&(t=e.r),e.g!==void 0&&(n=e.g),e.r!==void 0&&(r=e.b),e.a!==void 0&&(o=e.a)),[t,n,r,o]),Ee=e=>{e.loading+=1,(async()=>{const r=await(await fetch("app.json")).json();Object.assign(e,r),e.gpu&&await ue(e.gpu,e.embed),e.func&&Pe(e.func),delete e.embed,e.loading-=1})()},Ve=async e=>{const t=window.atob(e),n=new Uint8Array(t.length);for(let s=0;s<t.length;++s)n[s]=t.charCodeAt(s);const r=new Blob([n]).stream().pipeThrough(new DecompressionStream("deflate-raw")),o=await new Response(r).arrayBuffer();return new Uint8Array(o)},Fe=async e=>{const t=window.atob(e),n=new Uint8Array(t.length);for(let s=0;s<t.length;++s)n[s]=t.charCodeAt(s);const r=new Blob([n]).stream().pipeThrough(new DecompressionStream("deflate-raw"));return await new Response(r).text()},Me=async(e,t)=>{if(!navigator.gpu){C("ERROR: WebGPU not supported.");return}const n={loading:0};Ee(n);const r=o=>{Le(n)&&(Be(n.func,o),pe(n.gpu),e&&(e(n),e=null),t&&t(n),we(n.gpu,n.view,n),Re(n.func)),requestAnimationFrame(r)};requestAnimationFrame(r)},Le=e=>e.loading<=0,Ae=(e,t)=>e.json[t],Te=(e,t)=>e.room[t],$e=e=>{Z(),Object.assign(e.view,Ae(e,"sample")),Ce(e)},Oe=e=>{const t=e.view,n=t.camera,r=b(e,"dt"),o=[0,0];o[0]+=-b(e,"l0"),o[0]+=b(e,"l1"),o[1]+=b(e,"l2"),o[1]+=-b(e,"l3");const s=[0,0];if(s[0]+=-b(e,"r0"),s[0]+=b(e,"r1"),s[1]+=b(e,"r2"),s[1]+=-b(e,"r3"),s){const m=-s[0],u=s[1];n.offset.ha+=90*r*m,n.offset.va+=90*r*u,n.offset.va=Math.max(-60,Math.min(n.offset.va,80))}if(o){const m=S(n.offset.ha+90),u=S(n.offset.ha),d=-o[0],a=o[1],h=d*Math.cos(m)+a*Math.cos(u),G=d*Math.sin(m)+a*Math.sin(u),p=2*r*h,x=2*r*G;n.offset.x+=p,n.offset.z+=x}b(e,"a2")&&(n.offset.y-=.75*r),b(e,"a3")&&(n.offset.y+=.75*r);const l=t.light;l.offset.ha+=45*r};y(window,"load",()=>{C("Welcome Basilico."),Me($e,Oe)});const Ce=e=>{const t=[];t.push({from:[-50,0,0],to:[50,0,0],color:[255,0,0,255]}),t.push({from:[0,0,-50],to:[0,0,50],color:[0,0,255,255]}),Ue(e.view,t)};})();
